{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.DataTableTitle=exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _color=_interopRequireDefault(require(\"color\"));var _MaterialCommunityIcon=_interopRequireDefault(require(\"../MaterialCommunityIcon\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _theming=require(\"../../core/theming\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var DataTableTitle=function(_React$Component){(0,_inherits2.default)(DataTableTitle,_React$Component);var _super=_createSuper(DataTableTitle);function DataTableTitle(){var _this;(0,_classCallCheck2.default)(this,DataTableTitle);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty((0,_assertThisInitialized2.default)(_this),\"state\",{spinAnim:new _reactNative.Animated.Value(_this.props.sortDirection==='ascending'?0:1)});return _this;}(0,_createClass2.default)(DataTableTitle,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.sortDirection===this.props.sortDirection){return;}_reactNative.Animated.timing(this.state.spinAnim,{toValue:this.props.sortDirection==='ascending'?0:1,duration:150,useNativeDriver:true}).start();}},{key:\"render\",value:function render(){var _this$props=this.props,numeric=_this$props.numeric,children=_this$props.children,onPress=_this$props.onPress,sortDirection=_this$props.sortDirection,theme=_this$props.theme,style=_this$props.style,numberOfLines=_this$props.numberOfLines,rest=_objectWithoutProperties(_this$props,[\"numeric\",\"children\",\"onPress\",\"sortDirection\",\"theme\",\"style\",\"numberOfLines\"]);var textColor=(0,_color.default)(theme.colors.text).alpha(0.6).rgb().string();var spin=this.state.spinAnim.interpolate({inputRange:[0,1],outputRange:['0deg','180deg']});var icon=sortDirection?React.createElement(_reactNative.Animated.View,{style:[styles.icon,{transform:[{rotate:spin}]}]},React.createElement(_MaterialCommunityIcon.default,{name:\"arrow-down\",size:16,color:theme.colors.text,direction:_reactNative.I18nManager.isRTL?'rtl':'ltr'})):null;return React.createElement(_reactNative.TouchableWithoutFeedback,_extends({disabled:!onPress,onPress:onPress},rest),React.createElement(_reactNative.View,{style:[styles.container,numeric&&styles.right,style]},icon,React.createElement(_Text.default,{style:[styles.cell,sortDirection?styles.sorted:{color:textColor}],numberOfLines:numberOfLines},children)));}}]);return DataTableTitle;}(React.Component);exports.DataTableTitle=DataTableTitle;_defineProperty(DataTableTitle,\"displayName\",'DataTable.Title');_defineProperty(DataTableTitle,\"defaultProps\",{numberOfLines:1});var styles=_reactNative.StyleSheet.create({container:{flex:1,flexDirection:'row',alignContent:'center',paddingVertical:12},right:{justifyContent:'flex-end'},cell:{height:24,lineHeight:24,fontSize:12,fontWeight:'500',alignItems:'center'},sorted:{marginLeft:8},icon:{height:24,justifyContent:'center'}});var _default=(0,_theming.withTheme)(DataTableTitle);exports.default=_default;","map":{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","React","numberOfLines","spinAnim","Animated","prevProps","toValue","duration","useNativeDriver","textColor","color","theme","spin","inputRange","outputRange","icon","sortDirection","styles","transform","rotate","I18nManager","onPress","numeric","container","flex","flexDirection","alignContent","paddingVertical","right","justifyContent","cell","height","lineHeight","fontSize","fontWeight","alignItems","sorted","marginLeft","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  spinAnim: Animated.Value;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <MaterialCommunityIcon\n          name=\"arrow-down\"\n          size={16}\n          color={theme.colors.text}\n          direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n        />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"script"}