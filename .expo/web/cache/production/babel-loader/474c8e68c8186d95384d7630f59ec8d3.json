{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _DiscreteGestureHandler=_interopRequireDefault(require(\"./DiscreteGestureHandler\"));var NodeManager=_interopRequireWildcard(require(\"./NodeManager\"));var _PressGestureHandler2=_interopRequireDefault(require(\"./PressGestureHandler\"));var _utils=require(\"./utils\");function _createForOfIteratorHelperLoose(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}it=o[Symbol.iterator]();return it.next.bind(it);}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}var NativeViewGestureHandler=function(_PressGestureHandler){(0,_inherits2.default)(NativeViewGestureHandler,_PressGestureHandler);var _super=_createSuper(NativeViewGestureHandler);function NativeViewGestureHandler(){(0,_classCallCheck2.default)(this,NativeViewGestureHandler);return _super.apply(this,arguments);}(0,_createClass2.default)(NativeViewGestureHandler,[{key:\"onRawEvent\",value:function onRawEvent(ev){var _this=this;(0,_get2.default)((0,_getPrototypeOf2.default)(NativeViewGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(!ev.isFinal){if((0,_utils.TEST_MIN_IF_NOT_NAN)((0,_utils.VEC_LEN_SQ)({x:ev.deltaX,y:ev.deltaY}),10)){if(this.config.disallowInterruption){var gestures=Object.values(NodeManager.getNodes()).filter(function(gesture){var handlerTag=gesture.handlerTag,view=gesture.view,isGestureRunning=gesture.isGestureRunning;return handlerTag!==_this.handlerTag&&isGestureRunning&&gesture instanceof _DiscreteGestureHandler.default&&view&&_this.view.contains(view);});for(var _iterator=_createForOfIteratorHelperLoose(gestures),_step;!(_step=_iterator()).done;){var gesture=_step.value;gesture.forceInvalidate(ev);}}}}}}]);return NativeViewGestureHandler;}(_PressGestureHandler2.default);var _default=NativeViewGestureHandler;exports.default=_default;","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-gesture-handler/web/NativeViewGestureHandler.js"],"names":["NativeViewGestureHandler","ev","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","NodeManager","getNodes","filter","gesture","handlerTag","view","isGestureRunning","DiscreteGestureHandler","contains","forceInvalidate","PressGestureHandler"],"mappings":"0xBAAA,wFACA,kEACA,mFACA,8B,iwDAEMA,CAAAA,wB,6XACOC,E,CAAI,gBACb,gHAAiBA,EAAjB,EACA,GAAI,CAACA,EAAE,CAACC,OAAR,CAAiB,CAEf,GAAI,+BAAoB,sBAAW,CAAEC,CAAC,CAAEF,EAAE,CAACG,MAAR,CAAgBC,CAAC,CAAEJ,EAAE,CAACK,MAAtB,CAAX,CAApB,CAAgE,EAAhE,CAAJ,CAAyE,CACvE,GAAI,KAAKC,MAAL,CAAYC,oBAAhB,CAAsC,CACpC,GAAMC,CAAAA,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAcC,WAAW,CAACC,QAAZ,EAAd,EAAsCC,MAAtC,CAA6C,SAAAC,OAAO,CAAI,IAC/DC,CAAAA,UAD+D,CACxBD,OADwB,CAC/DC,UAD+D,CACnDC,IADmD,CACxBF,OADwB,CACnDE,IADmD,CAC7CC,gBAD6C,CACxBH,OADwB,CAC7CG,gBAD6C,CAEvE,MAEEF,CAAAA,UAAU,GAAK,KAAI,CAACA,UAApB,EAEAE,gBAFA,EAIAH,OAAO,WAAYI,gCAJnB,EAMAF,IANA,EAOA,KAAI,CAACA,IAAL,CAAUG,QAAV,CAAmBH,IAAnB,CATF,CAWD,CAbgB,CAAjB,CAeA,kDAAsBR,QAAtB,mCAAgC,IAArBM,CAAAA,OAAqB,aAE9BA,OAAO,CAACM,eAAR,CAAwBpB,EAAxB,EACD,CACF,CACF,CACF,CACF,C,sCA7BoCqB,6B,eAgCxBtB,wB","sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(gesture => {\n            const { handlerTag, view, isGestureRunning } = gesture;\n            return (\n              // Check if this gesture isn't self\n              handlerTag !== this.handlerTag &&\n              // Ensure the gesture needs to be cancelled\n              isGestureRunning &&\n              // ScrollView can cancel discrete gestures like taps and presses\n              gesture instanceof DiscreteGestureHandler &&\n              // Ensure a view exists and is a child of the current view\n              view &&\n              this.view.contains(view)\n            );\n          });\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"]},"metadata":{},"sourceType":"script"}