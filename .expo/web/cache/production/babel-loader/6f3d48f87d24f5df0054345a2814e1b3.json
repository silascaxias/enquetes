{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _hammerjs=_interopRequireDefault(require(\"@egjs/hammerjs\"));var _State=_interopRequireDefault(require(\"../State\"));var _constants=require(\"./constants\");var _DiscreteGestureHandler=_interopRequireDefault(require(\"./DiscreteGestureHandler\"));var _utils=require(\"./utils\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}var PressGestureHandler=function(_DiscreteGestureHandl){(0,_inherits2.default)(PressGestureHandler,_DiscreteGestureHandl);var _super=_createSuper(PressGestureHandler);function PressGestureHandler(){var _this;(0,_classCallCheck2.default)(this,PressGestureHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.shouldDelayTouches=true;return _this;}(0,_createClass2.default)(PressGestureHandler,[{key:\"simulateCancelEvent\",value:function simulateCancelEvent(inputData){this.hasGestureFailed=true;this.cancelEvent(inputData);}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(_ref){var shouldCancelWhenOutside=_ref.shouldCancelWhenOutside,maxDistSq=_ref.maxDistSq;return shouldCancelWhenOutside||!(0,_utils.isValidNumber)(maxDistSq);}},{key:\"getState\",value:function getState(type){var _Hammer$INPUT_START$H;return(_Hammer$INPUT_START$H={},(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_START,_State.default.BEGAN),(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_MOVE,_State.default.ACTIVE),(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_END,_State.default.END),(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_CANCEL,_State.default.CANCELLED),_Hammer$INPUT_START$H)[type];}},{key:\"getConfig\",value:function getConfig(){if(!this._hasCustomActivationCriteria){return{shouldCancelWhenOutside:true,maxDistSq:10};}return this.config;}},{key:\"getHammerConfig\",value:function getHammerConfig(){return(0,_extends2.default)({},(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"getHammerConfig\",this).call(this),{time:this.minDurationMs});}},{key:\"onGestureActivated\",value:function onGestureActivated(ev){this.onGestureStart(ev);}},{key:\"shouldDelayTouchForEvent\",value:function shouldDelayTouchForEvent(_ref2){var pointerType=_ref2.pointerType;return this.shouldDelayTouches&&pointerType==='touch';}},{key:\"onGestureStart\",value:function onGestureStart(ev){var _this2=this;this.isGestureRunning=true;clearTimeout(this.visualFeedbackTimer);this.initialEvent=ev;this.visualFeedbackTimer=(0,_utils.fireAfterInterval)(function(){_this2.sendGestureStartedEvent(_this2.initialEvent);_this2.initialEvent=null;},this.shouldDelayTouchForEvent(ev)&&_constants.CONTENT_TOUCHES_DELAY);}},{key:\"sendGestureStartedEvent\",value:function sendGestureStartedEvent(ev){clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.sendEvent((0,_extends2.default)({},ev,{eventType:_hammerjs.default.INPUT_MOVE,isFirst:true}));}},{key:\"forceInvalidate\",value:function forceInvalidate(event){(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"forceInvalidate\",this).call(this,event);clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.initialEvent=null;}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this3=this;(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(ev.isFinal&&this.isGestureRunning){var timeout;if(this.visualFeedbackTimer){timeout=_constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;this.sendGestureStartedEvent(this.initialEvent);this.initialEvent=null;}(0,_utils.fireAfterInterval)(function(){_this3.sendEvent((0,_extends2.default)({},ev,{eventType:_hammerjs.default.INPUT_END,isFinal:true}));_this3.onGestureEnded();},timeout);}}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref3){var _ref3$shouldActivateO=_ref3.shouldActivateOnStart,shouldActivateOnStart=_ref3$shouldActivateO===void 0?false:_ref3$shouldActivateO,_ref3$disallowInterru=_ref3.disallowInterruption,disallowInterruption=_ref3$disallowInterru===void 0?false:_ref3$disallowInterru,_ref3$shouldCancelWhe=_ref3.shouldCancelWhenOutside,shouldCancelWhenOutside=_ref3$shouldCancelWhe===void 0?true:_ref3$shouldCancelWhe,_ref3$minDurationMs=_ref3.minDurationMs,minDurationMs=_ref3$minDurationMs===void 0?Number.NaN:_ref3$minDurationMs,_ref3$maxDist=_ref3.maxDist,maxDist=_ref3$maxDist===void 0?Number.NaN:_ref3$maxDist,_ref3$minPointers=_ref3.minPointers,minPointers=_ref3$minPointers===void 0?1:_ref3$minPointers,_ref3$maxPointers=_ref3.maxPointers,maxPointers=_ref3$maxPointers===void 0?1:_ref3$maxPointers,props=(0,_objectWithoutProperties2.default)(_ref3,[\"shouldActivateOnStart\",\"disallowInterruption\",\"shouldCancelWhenOutside\",\"minDurationMs\",\"maxDist\",\"minPointers\",\"maxPointers\"]);return(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"updateGestureConfig\",this).call(this,(0,_extends2.default)({shouldActivateOnStart:shouldActivateOnStart,disallowInterruption:disallowInterruption,shouldCancelWhenOutside:shouldCancelWhenOutside,minDurationMs:minDurationMs,maxDist:maxDist,minPointers:minPointers,maxPointers:maxPointers},props));}},{key:\"name\",get:function get(){return'press';}},{key:\"minDurationMs\",get:function get(){return(0,_utils.isnan)(this.config.minDurationMs)?5:this.config.minDurationMs;}},{key:\"maxDist\",get:function get(){return(0,_utils.isnan)(this.config.maxDist)?9:this.config.maxDist;}},{key:\"NativeGestureClass\",get:function get(){return _hammerjs.default.Press;}}]);return PressGestureHandler;}(_DiscreteGestureHandler.default);var _default=PressGestureHandler;exports.default=_default;","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-gesture-handler/web/PressGestureHandler.js"],"names":["PressGestureHandler","shouldDelayTouches","inputData","hasGestureFailed","cancelEvent","shouldCancelWhenOutside","maxDistSq","type","Hammer","INPUT_START","State","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","_hasCustomActivationCriteria","config","time","minDurationMs","ev","onGestureStart","pointerType","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","shouldDelayTouchForEvent","CONTENT_TOUCHES_DELAY","sendEvent","eventType","isFirst","event","isFinal","timeout","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","onGestureEnded","shouldActivateOnStart","disallowInterruption","Number","NaN","maxDist","minPointers","maxPointers","props","Press","DiscreteGestureHandler"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (ev.isFinal && this.isGestureRunning) {\n      let timeout;\n      if (this.visualFeedbackTimer) {\n        // Aesthetic timing for a quick tap.\n        // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n        // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n        timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }\n      fireAfterInterval(() => {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_END,\n          isFinal: true,\n        });\n        this.onGestureEnded();\n      }, timeout);\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"]},"metadata":{},"sourceType":"script"}