{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _colors=require(\"../styles/colors\");var _reactNative=require(\"react-native\");var _color=_interopRequireDefault(require(\"color\"));var _theming=require(\"../core/theming\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var version=_reactNative.NativeModules.PlatformConstants?_reactNative.NativeModules.PlatformConstants.reactNativeVersion:undefined;var Switch=function(_React$Component){(0,_inherits2.default)(Switch,_React$Component);var _super=_createSuper(Switch);function Switch(){(0,_classCallCheck2.default)(this,Switch);return _super.apply(this,arguments);}(0,_createClass2.default)(Switch,[{key:\"render\",value:function render(){var _this$props=this.props,value=_this$props.value,disabled=_this$props.disabled,onValueChange=_this$props.onValueChange,color=_this$props.color,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"value\",\"disabled\",\"onValueChange\",\"color\",\"theme\"]);var checkedColor=color||theme.colors.accent;var onTintColor=_reactNative.Platform.OS==='ios'?checkedColor:disabled?theme.dark?(0,_color.default)(_colors.white).alpha(0.1).rgb().string():(0,_color.default)(_colors.black).alpha(0.12).rgb().string():(0,_color.default)(checkedColor).alpha(0.5).rgb().string();var thumbTintColor=_reactNative.Platform.OS==='ios'?undefined:disabled?theme.dark?_colors.grey800:_colors.grey400:value?checkedColor:theme.dark?_colors.grey400:_colors.grey50;var props=version&&version.major===0&&version.minor<=56?{onTintColor:onTintColor,thumbTintColor:thumbTintColor}:{thumbColor:thumbTintColor,trackColor:{true:onTintColor,false:''}};return React.createElement(_reactNative.Switch,_extends({value:value,disabled:disabled,onValueChange:disabled?undefined:onValueChange},props,rest));}}]);return Switch;}(React.Component);var _default=(0,_theming.withTheme)(Switch);exports.default=_default;","map":{"version":3,"sources":["Switch.tsx"],"names":["version","NativeModules","React","theme","checkedColor","color","onTintColor","Platform","disabled","setColor","thumbTintColor","value","props","thumbColor","trackColor","true","false","onValueChange","withTheme"],"mappings":"ktBAAA,oDACA,wCACA,yCAOA,oDACA,wC,krDAEA,GAAMA,CAAAA,OAAO,CAAGC,2BAAAA,iBAAAA,CACZA,2BAAAA,iBAAAA,CADYA,kBAAAA,CAAhB,SAAA,C,GAkEA,CAAA,M,oRACW,CACP,GAAA,CAAA,WAAA,CAOI,KAPJ,KAAA,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,QAAN,CAAA,WAAA,CAAM,QAAN,CAAM,aAAN,CAAA,WAAA,CAAM,aAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAKEE,KALF,CAAA,WAAA,CAKEA,KALF,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CASA,GAAMC,CAAAA,YAAY,CAAGC,KAAK,EAAIF,KAAK,CAALA,MAAAA,CAA9B,MAAA,CAEA,GAAMG,CAAAA,WAAW,CACfC,sBAAAA,EAAAA,GAAAA,KAAAA,CAAAA,YAAAA,CAEIC,QAAQ,CACRL,KAAK,CAALA,IAAAA,CACEM,mBAAAA,aAAAA,EAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,GADFN,MACEM,EADFN,CAEEM,mBAAAA,aAAAA,EAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAHM,MAGNA,EAHM,CAIRA,mBAAAA,YAAAA,EAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,GAPN,MAOMA,EAPN,CASA,GAAMC,CAAAA,cAAc,CAClBH,sBAAAA,EAAAA,GAAAA,KAAAA,CAAAA,SAAAA,CAEIC,QAAQ,CACRL,KAAK,CAALA,IAAAA,CAAAA,eAAAA,CADQ,eAAA,CAIRQ,KAAK,CAAA,YAAA,CAELR,KAAK,CAALA,IAAAA,CAAAA,eAAAA,CATN,cAAA,CAaA,GAAMS,CAAAA,KAAK,CACT,OAAO,EAAIZ,OAAO,CAAPA,KAAAA,GAAX,CAAA,EAAkCA,OAAO,CAAPA,KAAAA,EAAlC,EAAA,CACI,CACEM,WADF,CACEA,WADF,CAEEI,cAAAA,CAAAA,cAFF,CADJ,CAKI,CACEG,UAAU,CADZ,cAAA,CAEEC,UAAU,CAAE,CACVC,IAAI,CADM,WAAA,CAEVC,KAAK,CAAE,EAFG,CAFd,CANN,CAcA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,CACE,KAAK,CADP,KAAA,CAEE,QAAQ,CAFV,QAAA,CAGE,aAAa,CAAER,QAAQ,CAAA,SAAA,CAAeS,aAHxC,CAAA,CAAA,KAAA,CADF,IACE,CAAA,CADF,CASD,C,oBA1DkBf,KAAK,CAA1B,S,eA6DegB,uBAAf,MAAeA,C","sourcesContent":["import * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from '../styles/colors';\nimport {\n  NativeModules,\n  Platform,\n  StyleProp,\n  Switch as NativeSwitch,\n  ViewStyle,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\nconst version = NativeModules.PlatformConstants\n  ? NativeModules.PlatformConstants.reactNativeVersion\n  : undefined;\n\ntype Props = React.ComponentPropsWithRef<typeof NativeSwitch> & {\n  /**\n   * Disable toggling the switch.\n   */\n  disabled?: boolean;\n  /**\n   * Value of the switch, true means 'on', false means 'off'.\n   */\n  value?: boolean;\n  /**\n   * Custom color for switch.\n   */\n  color?: string;\n  /**\n   * Callback called with the new value when it changes.\n   */\n  onValueChange?: Function;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Switch is a visual toggle between two mutually exclusive states â€” on and off.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n *\n *   const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n *\n *   return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass Switch extends React.Component<Props> {\n  render() {\n    const {\n      value,\n      disabled,\n      onValueChange,\n      color,\n      theme,\n      ...rest\n    } = this.props;\n\n    const checkedColor = color || theme.colors.accent;\n\n    const onTintColor =\n      Platform.OS === 'ios'\n        ? checkedColor\n        : disabled\n        ? theme.dark\n          ? setColor(white).alpha(0.1).rgb().string()\n          : setColor(black).alpha(0.12).rgb().string()\n        : setColor(checkedColor).alpha(0.5).rgb().string();\n\n    const thumbTintColor =\n      Platform.OS === 'ios'\n        ? undefined\n        : disabled\n        ? theme.dark\n          ? grey800\n          : grey400\n        : value\n        ? checkedColor\n        : theme.dark\n        ? grey400\n        : grey50;\n\n    const props =\n      version && version.major === 0 && version.minor <= 56\n        ? {\n            onTintColor,\n            thumbTintColor,\n          }\n        : {\n            thumbColor: thumbTintColor,\n            trackColor: {\n              true: onTintColor,\n              false: '',\n            },\n          };\n\n    return (\n      <NativeSwitch\n        value={value}\n        disabled={disabled}\n        onValueChange={disabled ? undefined : onValueChange}\n        {...props}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport default withTheme(Switch);\n"]},"metadata":{},"sourceType":"script"}