{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _constants=require(\"./web/constants\");var _FlingGestureHandler=_interopRequireDefault(require(\"./web/FlingGestureHandler\"));var _LongPressGestureHandler=_interopRequireDefault(require(\"./web/LongPressGestureHandler\"));var _NativeViewGestureHandler=_interopRequireDefault(require(\"./web/NativeViewGestureHandler\"));var NodeManager=_interopRequireWildcard(require(\"./web/NodeManager\"));var _PanGestureHandler=_interopRequireDefault(require(\"./web/PanGestureHandler\"));var _PinchGestureHandler=_interopRequireDefault(require(\"./web/PinchGestureHandler\"));var _RotationGestureHandler=_interopRequireDefault(require(\"./web/RotationGestureHandler\"));var _TapGestureHandler=_interopRequireDefault(require(\"./web/TapGestureHandler\"));var Gestures={PanGestureHandler:_PanGestureHandler.default,RotationGestureHandler:_RotationGestureHandler.default,PinchGestureHandler:_PinchGestureHandler.default,TapGestureHandler:_TapGestureHandler.default,NativeViewGestureHandler:_NativeViewGestureHandler.default,LongPressGestureHandler:_LongPressGestureHandler.default,FlingGestureHandler:_FlingGestureHandler.default};var _default={Direction:_constants.Direction,handleSetJSResponder:function handleSetJSResponder(tag,blockNativeResponder){console.warn('handleSetJSResponder: ',tag,blockNativeResponder);},handleClearJSResponder:function handleClearJSResponder(){console.warn('handleClearJSResponder: ');},createGestureHandler:function createGestureHandler(handlerName,handlerTag,config){if(!(handlerName in Gestures))throw new Error(\"react-native-gesture-handler: \"+handlerName+\" is not supported on web.\");var GestureClass=Gestures[handlerName];NodeManager.createGestureHandler(handlerTag,new GestureClass());this.updateGestureHandler(handlerTag,config);},attachGestureHandler:function attachGestureHandler(handlerTag,newView){NodeManager.getHandler(handlerTag).setView(newView);},updateGestureHandler:function updateGestureHandler(handlerTag,newConfig){NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);},getGestureHandlerNode:function getGestureHandlerNode(handlerTag){return NodeManager.getHandler(handlerTag);},dropGestureHandler:function dropGestureHandler(handlerTag){NodeManager.dropGestureHandler(handlerTag);}};exports.default=_default;","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-gesture-handler/RNGestureHandlerModule.web.js"],"names":["Gestures","PanGestureHandler","RotationGestureHandler","PinchGestureHandler","TapGestureHandler","NativeViewGestureHandler","LongPressGestureHandler","FlingGestureHandler","Direction","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","Error","GestureClass","NodeManager","updateGestureHandler","attachGestureHandler","newView","getHandler","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler"],"mappings":"wPAAA,0CACA,sFACA,8FACA,gGACA,sEACA,kFACA,sFACA,4FACA,kFAEA,GAAMA,CAAAA,QAAQ,CAAG,CACfC,iBAAiB,CAAjBA,0BADe,CAEfC,sBAAsB,CAAtBA,+BAFe,CAGfC,mBAAmB,CAAnBA,4BAHe,CAIfC,iBAAiB,CAAjBA,0BAJe,CAKfC,wBAAwB,CAAxBA,iCALe,CAMfC,uBAAuB,CAAvBA,gCANe,CAOfC,mBAAmB,CAAnBA,4BAPe,CAAjB,C,aAWe,CACbC,SAAS,CAATA,oBADa,CAEbC,oBAFa,+BAEQC,GAFR,CAEaC,oBAFb,CAEmC,CAC9CC,OAAO,CAACC,IAAR,CAAa,wBAAb,CAAuCH,GAAvC,CAA4CC,oBAA5C,EACD,CAJY,CAKbG,sBALa,kCAKY,CACvBF,OAAO,CAACC,IAAR,CAAa,0BAAb,EACD,CAPY,CAQbE,oBARa,+BAQQC,WARR,CAQqBC,UARrB,CAQiCC,MARjC,CAQyC,CACpD,GAAI,EAAEF,WAAW,GAAIhB,CAAAA,QAAjB,CAAJ,CACE,KAAM,IAAImB,CAAAA,KAAJ,kCAA2CH,WAA3C,6BAAN,CACF,GAAMI,CAAAA,YAAY,CAAGpB,QAAQ,CAACgB,WAAD,CAA7B,CACAK,WAAW,CAACN,oBAAZ,CAAiCE,UAAjC,CAA6C,GAAIG,CAAAA,YAAJ,EAA7C,EACA,KAAKE,oBAAL,CAA0BL,UAA1B,CAAsCC,MAAtC,EACD,CAdY,CAebK,oBAfa,+BAeQN,UAfR,CAeoBO,OAfpB,CAe6B,CACxCH,WAAW,CAACI,UAAZ,CAAuBR,UAAvB,EAAmCS,OAAnC,CAA2CF,OAA3C,EACD,CAjBY,CAkBbF,oBAlBa,+BAkBQL,UAlBR,CAkBoBU,SAlBpB,CAkB+B,CAC1CN,WAAW,CAACI,UAAZ,CAAuBR,UAAvB,EAAmCW,mBAAnC,CAAuDD,SAAvD,EACD,CApBY,CAqBbE,qBArBa,gCAqBSZ,UArBT,CAqBqB,CAChC,MAAOI,CAAAA,WAAW,CAACI,UAAZ,CAAuBR,UAAvB,CAAP,CACD,CAvBY,CAwBba,kBAxBa,6BAwBMb,UAxBN,CAwBkB,CAC7BI,WAAW,CAACS,kBAAZ,CAA+Bb,UAA/B,EACD,CA1BY,C","sourcesContent":["import { Direction } from './web/constants';\nimport FlingGestureHandler from './web/FlingGestureHandler';\nimport LongPressGestureHandler from './web/LongPressGestureHandler';\nimport NativeViewGestureHandler from './web/NativeViewGestureHandler';\nimport * as NodeManager from './web/NodeManager';\nimport PanGestureHandler from './web/PanGestureHandler';\nimport PinchGestureHandler from './web/PinchGestureHandler';\nimport RotationGestureHandler from './web/RotationGestureHandler';\nimport TapGestureHandler from './web/TapGestureHandler';\n\nconst Gestures = {\n  PanGestureHandler,\n  RotationGestureHandler,\n  PinchGestureHandler,\n  TapGestureHandler,\n  NativeViewGestureHandler,\n  LongPressGestureHandler,\n  FlingGestureHandler,\n  // ForceTouchGestureHandler,\n};\n\nexport default {\n  Direction,\n  handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures))\n      throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n    const GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler(handlerTag, newView) {\n    NodeManager.getHandler(handlerTag).setView(newView);\n  },\n  updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}