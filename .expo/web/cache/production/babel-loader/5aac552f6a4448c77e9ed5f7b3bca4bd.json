{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.CardCover=exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _theming=require(\"../../core/theming\");var _colors=require(\"../../styles/colors\");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var CardCover=function CardCover(_ref){var index=_ref.index,total=_ref.total,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"index\",\"total\",\"style\",\"theme\"]);var roundness=theme.roundness;var coverStyle;if(index===0){if(total===1){coverStyle={borderRadius:roundness};}else{coverStyle={borderTopLeftRadius:roundness,borderTopRightRadius:roundness};}}else if(typeof total==='number'&&index===total-1){coverStyle={borderBottomLeftRadius:roundness};}return React.createElement(_reactNative.View,{style:[styles.container,coverStyle,style]},React.createElement(_reactNative.Image,_extends({},rest,{style:[styles.image,coverStyle]})));};exports.CardCover=CardCover;CardCover.displayName='Card.Cover';var styles=_reactNative.StyleSheet.create({container:{height:195,backgroundColor:_colors.grey200,overflow:'hidden'},image:{flex:1,height:undefined,width:undefined,padding:16,justifyContent:'flex-end',resizeMode:'cover'}});var _default=(0,_theming.withTheme)(CardCover);exports.default=_default;","map":{"version":3,"sources":["CardCover.tsx"],"names":["CardCover","theme","rest","roundness","index","total","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","container","height","backgroundColor","overflow","image","flex","width","padding","justifyContent","resizeMode","withTheme"],"mappings":"uLAAA,oDACA,yCACA,2CACA,2C,+9BA2CA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAA,IAAA,CAAoD,IAAnD,CAAA,KAAmD,CAAA,IAAA,CAAnD,KAAmD,CAAnD,KAAmD,CAAA,IAAA,CAAnD,KAAmD,CAAnD,KAAmD,CAAA,IAAA,CAAnD,KAAmD,CAA5BC,KAA4B,CAAA,IAAA,CAA5BA,KAA4B,CAAlBC,IAAkB,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,IAC5DC,CAAAA,SAD4D,CACpE,KADoE,CAC5DA,SAD4D,CAGpE,GAAA,CAAA,UAAA,CAEA,GAAIC,KAAK,GAAT,CAAA,CAAiB,CACf,GAAIC,KAAK,GAAT,CAAA,CAAiB,CACfC,UAAU,CAAG,CACXC,YAAY,CAAEJ,SADH,CAAbG,CADF,CAAA,IAIO,CACLA,UAAU,CAAG,CACXE,mBAAmB,CADR,SAAA,CAEXC,oBAAoB,CAAEN,SAFX,CAAbG,CAID,CAVH,CAAA,IAWO,IAAI,MAAA,CAAA,KAAA,GAAA,QAAA,EAA6BF,KAAK,GAAKC,KAAK,CAAhD,CAAA,CAAsD,CAC3DC,UAAU,CAAG,CACXI,sBAAsB,CAAEP,SADb,CAAbG,CAGD,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,CAAM,KAAK,CAAE,CAACK,MAAM,CAAP,SAAA,CAAA,UAAA,CAAA,KAAA,CAAb,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAiB,KAAK,CAAE,CAACA,MAAM,CAAP,KAAA,CAAA,UAAA,CAAxB,CAAA,CAAA,CADF,CADF,CAtBF,CAAA,C,4BA6BAX,SAAS,CAATA,WAAAA,CAAAA,YAAAA,CACA,GAAMW,CAAAA,MAAM,CAAG,wBAAA,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,MAAM,CADG,GAAA,CAETC,eAAe,CAFN,eAAA,CAGTC,QAAQ,CAAE,QAHD,CADoB,CAM/BC,KAAK,CAAE,CACLC,IAAI,CADC,CAAA,CAELJ,MAAM,CAFD,SAAA,CAGLK,KAAK,CAHA,SAAA,CAILC,OAAO,CAJF,EAAA,CAKLC,cAAc,CALT,UAAA,CAMLC,UAAU,CAAE,OANP,CANwB,CAAlB,CAAf,C,aAgBeC,uBAAf,SAAeA,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\n\ntype Props = React.ComponentPropsWithRef<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://facebook.github.io/react-native/docs/image.html#props\n */\nconst CardCover = ({ index, total, style, theme, ...rest }: Props) => {\n  const { roundness } = theme;\n\n  let coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness,\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness,\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness,\n    };\n  }\n\n  return (\n    <View style={[styles.container, coverStyle, style]}>\n      <Image {...rest} style={[styles.image, coverStyle]} />\n    </View>\n  );\n};\n\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"]},"metadata":{},"sourceType":"script"}