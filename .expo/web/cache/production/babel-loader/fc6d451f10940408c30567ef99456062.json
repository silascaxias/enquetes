{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _CardContent=_interopRequireDefault(require(\"./CardContent\"));var _CardActions=_interopRequireDefault(require(\"./CardActions\"));var _CardCover=_interopRequireDefault(require(\"./CardCover\"));var _CardTitle=_interopRequireDefault(require(\"./CardTitle\"));var _Surface=_interopRequireDefault(require(\"../Surface\"));var _theming=require(\"../../core/theming\");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var Card=function Card(_ref){var _ref$elevation=_ref.elevation,cardElevation=_ref$elevation===void 0?1:_ref$elevation,onLongPress=_ref.onLongPress,onPress=_ref.onPress,children=_ref.children,style=_ref.style,theme=_ref.theme,testID=_ref.testID,accessible=_ref.accessible,rest=_objectWithoutProperties(_ref,[\"elevation\",\"onLongPress\",\"onPress\",\"children\",\"style\",\"theme\",\"testID\",\"accessible\"]);var _React$useRef=React.useRef(new _reactNative.Animated.Value(cardElevation)),elevation=_React$useRef.current;var handlePressIn=function handlePressIn(){var dark=theme.dark,mode=theme.mode,scale=theme.animation.scale;_reactNative.Animated.timing(elevation,{toValue:8,duration:150*scale,useNativeDriver:!dark||mode==='exact'}).start();};var handlePressOut=function handlePressOut(){var dark=theme.dark,mode=theme.mode,scale=theme.animation.scale;_reactNative.Animated.timing(elevation,{toValue:cardElevation,duration:150*scale,useNativeDriver:!dark||mode==='exact'}).start();};var roundness=theme.roundness;var total=React.Children.count(children);var siblings=React.Children.map(children,function(child){return React.isValidElement(child)&&child.type?child.type.displayName:null;});return React.createElement(_Surface.default,_extends({style:[{borderRadius:roundness,elevation:elevation},style]},rest),React.createElement(_reactNative.TouchableWithoutFeedback,{delayPressIn:0,disabled:!(onPress||onLongPress),onLongPress:onLongPress,onPress:onPress,onPressIn:onPress?handlePressIn:undefined,onPressOut:onPress?handlePressOut:undefined,testID:testID,accessible:accessible},React.createElement(_reactNative.View,{style:styles.innerContainer},React.Children.map(children,function(child,index){return React.isValidElement(child)?React.cloneElement(child,{index:index,total:total,siblings:siblings}):child;}))));};Card.Content=_CardContent.default;Card.Actions=_CardActions.default;Card.Cover=_CardCover.default;Card.Title=_CardTitle.default;var styles=_reactNative.StyleSheet.create({innerContainer:{flexGrow:1,flexShrink:1}});var _default=(0,_theming.withTheme)(Card);exports.default=_default;","map":{"version":3,"sources":["Card.tsx"],"names":["Card","elevation","cardElevation","accessible","rest","current","React","Animated","handlePressIn","animation","scale","toValue","duration","useNativeDriver","mode","handlePressOut","roundness","total","siblings","child","borderRadius","onPress","styles","innerContainer","index","flexGrow","flexShrink","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = ({\n  elevation: cardElevation = 1,\n  onLongPress,\n  onPress,\n  children,\n  style,\n  theme,\n  testID,\n  accessible,\n  ...rest\n}: Props) => {\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n\n  const handlePressIn = () => {\n    const {\n      dark,\n      mode,\n      animation: { scale },\n    } = theme;\n    Animated.timing(elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact',\n    }).start();\n  };\n\n  const handlePressOut = () => {\n    const {\n      dark,\n      mode,\n      animation: { scale },\n    } = theme;\n    Animated.timing(elevation, {\n      toValue: cardElevation,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact',\n    }).start();\n  };\n\n  const { roundness } = theme;\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, (child) =>\n    React.isValidElement(child) && child.type\n      ? (child.type as any).displayName\n      : null\n  );\n  return (\n    <Surface\n      // @ts-ignore\n      style={[{ borderRadius: roundness, elevation }, style]}\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        delayPressIn={0}\n        disabled={!(onPress || onLongPress)}\n        onLongPress={onLongPress}\n        onPress={onPress}\n        onPressIn={onPress ? handlePressIn : undefined}\n        onPressOut={onPress ? handlePressOut : undefined}\n        testID={testID}\n        accessible={accessible}\n      >\n        <View style={styles.innerContainer}>\n          {React.Children.map(children, (child, index) =>\n            React.isValidElement(child)\n              ? React.cloneElement(child, {\n                  index,\n                  total,\n                  siblings,\n                })\n              : child\n          )}\n        </View>\n      </TouchableWithoutFeedback>\n    </Surface>\n  );\n};\n\n// @component ./CardContent.tsx\nCard.Content = CardContent;\n// @component ./CardActions.tsx\nCard.Actions = CardActions;\n// @component ./CardCover.tsx\nCard.Cover = CardCover;\n// @component ./CardTitle.tsx\nCard.Title = CardTitle;\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default withTheme(Card);\n"]},"metadata":{},"sourceType":"script"}