{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.DialogTitle=exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _Title=_interopRequireDefault(require(\"../Typography/Title\"));var _theming=require(\"../../core/theming\");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var DialogTitle=function DialogTitle(_ref){var children=_ref.children,theme=_ref.theme,style=_ref.style,rest=_objectWithoutProperties(_ref,[\"children\",\"theme\",\"style\"]);return React.createElement(_Title.default,_extends({accessibilityTraits:\"header\",accessibilityRole:\"header\",style:[styles.text,{color:theme.colors.text},style]},rest),children);};exports.DialogTitle=DialogTitle;DialogTitle.displayName='Dialog.Title';var styles=_reactNative.StyleSheet.create({text:{marginTop:22,marginBottom:18,marginHorizontal:24}});var _default=(0,_theming.withTheme)(DialogTitle);exports.default=_default;","map":{"version":3,"sources":["DialogTitle.tsx"],"names":["DialogTitle","style","styles","color","theme","text","marginTop","marginBottom","marginHorizontal","withTheme"],"mappings":"4QAAA,oDACA,yCACA,kEACA,2C,+9BAgDA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,IAAA,CAAA,IAAC,CAAA,QAAD,CAAA,IAAA,CAAC,QAAD,CAAC,KAAD,CAAA,IAAA,CAAC,KAAD,CAAoBC,KAApB,CAAA,IAAA,CAAoBA,KAApB,CAAA,IAAA,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,MAClB,CAAA,KAAA,CAAA,aAAA,CAAA,cAAA,CAAA,QAAA,CAAA,CACE,mBAAmB,CADrB,QAAA,CAEE,iBAAiB,CAFnB,QAAA,CAGE,KAAK,CAAE,CAACC,MAAM,CAAP,IAAA,CAAc,CAAEC,KAAK,CAAEC,KAAK,CAALA,MAAAA,CAAaC,IAAtB,CAAd,CAAA,KAAA,CAHT,CAAA,CAAA,IAAA,CAAA,CADkB,QAClB,CADkB,CAApB,CAAA,C,gCAWAL,WAAW,CAAXA,WAAAA,CAAAA,cAAAA,CAEA,GAAME,CAAAA,MAAM,CAAG,wBAAA,MAAA,CAAkB,CAC/BG,IAAI,CAAE,CACJC,SAAS,CADL,EAAA,CAEJC,YAAY,CAFR,EAAA,CAGJC,gBAAgB,CAAE,EAHd,CADyB,CAAlB,CAAf,C,aAQeC,uBAAf,WAAeA,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport Title from '../Typography/Title';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = ({ children, theme, style, ...rest }: Props) => (\n  <Title\n    accessibilityTraits=\"header\"\n    accessibilityRole=\"header\"\n    style={[styles.text, { color: theme.colors.text }, style]}\n    {...rest}\n  >\n    {children}\n  </Title>\n);\n\nDialogTitle.displayName = 'Dialog.Title';\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n});\n\nexport default withTheme(DialogTitle);\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"]},"metadata":{},"sourceType":"script"}