{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"PureNativeButton\",{enumerable:true,get:function get(){return _GestureHandlerButton.default;}});exports.BorderlessButton=exports.RectButton=exports.BaseButton=exports.RawButton=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _createNativeWrapper=_interopRequireDefault(require(\"./createNativeWrapper\"));var _GestureHandlerButton=_interopRequireDefault(require(\"./GestureHandlerButton\"));var _State=_interopRequireDefault(require(\"./State\"));function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}var RawButton=(0,_createNativeWrapper.default)(_GestureHandlerButton.default,{shouldCancelWhenOutside:false,shouldActivateOnStart:false});exports.RawButton=RawButton;var BaseButton=function(_React$Component){(0,_inherits2.default)(BaseButton,_React$Component);var _super=_createSuper(BaseButton);function BaseButton(props){var _this;(0,_classCallCheck2.default)(this,BaseButton);_this=_super.call(this,props);_this._handleEvent=function(_ref){var nativeEvent=_ref.nativeEvent;var state=nativeEvent.state,oldState=nativeEvent.oldState,pointerInside=nativeEvent.pointerInside;var active=pointerInside&&state===_State.default.ACTIVE;if(active!==_this._lastActive&&_this.props.onActiveStateChange){_this.props.onActiveStateChange(active);}if(oldState===_State.default.ACTIVE&&state!==_State.default.CANCELLED&&_this._lastActive&&_this.props.onPress){_this.props.onPress(active);}_this._lastActive=active;};_this._onHandlerStateChange=function(e){_this.props.onHandlerStateChange&&_this.props.onHandlerStateChange(e);_this._handleEvent(e);};_this._onGestureEvent=function(e){_this.props.onGestureEvent&&_this.props.onGestureEvent(e);_this._handleEvent(e);};_this._lastActive=false;return _this;}(0,_createClass2.default)(BaseButton,[{key:\"render\",value:function render(){var _this$props=this.props,rippleColor=_this$props.rippleColor,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"rippleColor\"]);return _react.default.createElement(RawButton,(0,_extends2.default)({rippleColor:(0,_reactNative.processColor)(rippleColor)},rest,{onGestureEvent:this._onGestureEvent,onHandlerStateChange:this._onHandlerStateChange}));}}]);return BaseButton;}(_react.default.Component);exports.BaseButton=BaseButton;BaseButton.propTypes=(0,_extends2.default)({},RawButton.propTypes,{onPress:_propTypes.default.func,onActiveStateChange:_propTypes.default.func});var AnimatedBaseButton=_reactNative.Animated.createAnimatedComponent(BaseButton);var btnStyles=_reactNative.StyleSheet.create({underlay:{position:'absolute',left:0,right:0,bottom:0,top:0}});var RectButton=function(_React$Component2){(0,_inherits2.default)(RectButton,_React$Component2);var _super2=_createSuper(RectButton);function RectButton(props){var _this2;(0,_classCallCheck2.default)(this,RectButton);_this2=_super2.call(this,props);_this2._onActiveStateChange=function(active){if(_reactNative.Platform.OS!=='android'){_this2._opacity.setValue(active?_this2.props.activeOpacity:0);}_this2.props.onActiveStateChange&&_this2.props.onActiveStateChange(active);};_this2._opacity=new _reactNative.Animated.Value(0);return _this2;}(0,_createClass2.default)(RectButton,[{key:\"render\",value:function render(){var _this$props2=this.props,children=_this$props2.children,style=_this$props2.style,rest=(0,_objectWithoutProperties2.default)(_this$props2,[\"children\",\"style\"]);var resolvedStyle=_reactNative.StyleSheet.flatten(style!=null?style:{});return _react.default.createElement(BaseButton,(0,_extends2.default)({},rest,{style:resolvedStyle,onActiveStateChange:this._onActiveStateChange}),_react.default.createElement(_reactNative.Animated.View,{style:[btnStyles.underlay,{opacity:this._opacity,backgroundColor:this.props.underlayColor,borderRadius:resolvedStyle.borderRadius,borderTopLeftRadius:resolvedStyle.borderTopLeftRadius,borderTopRightRadius:resolvedStyle.borderTopRightRadius,borderBottomLeftRadius:resolvedStyle.borderBottomLeftRadius,borderBottomRightRadius:resolvedStyle.borderBottomRightRadius}]}),children);}}]);return RectButton;}(_react.default.Component);exports.RectButton=RectButton;RectButton.propTypes=BaseButton.propTypes;RectButton.defaultProps={activeOpacity:0.105,underlayColor:'black'};var BorderlessButton=function(_React$Component3){(0,_inherits2.default)(BorderlessButton,_React$Component3);var _super3=_createSuper(BorderlessButton);function BorderlessButton(props){var _this3;(0,_classCallCheck2.default)(this,BorderlessButton);_this3=_super3.call(this,props);_this3._onActiveStateChange=function(active){if(_reactNative.Platform.OS!=='android'){_this3._opacity.setValue(active?_this3.props.activeOpacity:1);}_this3.props.onActiveStateChange&&_this3.props.onActiveStateChange(active);};_this3._opacity=new _reactNative.Animated.Value(1);return _this3;}(0,_createClass2.default)(BorderlessButton,[{key:\"render\",value:function render(){var _this$props3=this.props,children=_this$props3.children,style=_this$props3.style,rest=(0,_objectWithoutProperties2.default)(_this$props3,[\"children\",\"style\"]);return _react.default.createElement(AnimatedBaseButton,(0,_extends2.default)({},rest,{onActiveStateChange:this._onActiveStateChange,style:[style,_reactNative.Platform.OS==='ios'&&{opacity:this._opacity}]}),children);}}]);return BorderlessButton;}(_react.default.Component);exports.BorderlessButton=BorderlessButton;BorderlessButton.propTypes=(0,_extends2.default)({},BaseButton.propTypes,{borderless:_propTypes.default.bool});BorderlessButton.defaultProps={activeOpacity:0.3,borderless:true};","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-gesture-handler/GestureButtons.js"],"names":["RawButton","GestureHandlerButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","props","_handleEvent","nativeEvent","state","oldState","pointerInside","active","State","ACTIVE","_lastActive","onActiveStateChange","CANCELLED","onPress","_onHandlerStateChange","e","onHandlerStateChange","_onGestureEvent","onGestureEvent","rippleColor","rest","React","Component","propTypes","PropTypes","func","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","_onActiveStateChange","Platform","OS","_opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","opacity","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","defaultProps","BorderlessButton","borderless","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport State from './State';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nexport class BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this._opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"script"}