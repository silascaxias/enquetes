{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _color=_interopRequireDefault(require(\"color\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _Icon=_interopRequireDefault(require(\"../Icon\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _theming=require(\"../../core/theming\");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var DrawerItem=function DrawerItem(_ref){var icon=_ref.icon,label=_ref.label,active=_ref.active,theme=_ref.theme,style=_ref.style,onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,rest=_objectWithoutProperties(_ref,[\"icon\",\"label\",\"active\",\"theme\",\"style\",\"onPress\",\"accessibilityLabel\"]);var colors=theme.colors,roundness=theme.roundness;var backgroundColor=active?(0,_color.default)(colors.primary).alpha(0.12).rgb().string():'transparent';var contentColor=active?colors.primary:(0,_color.default)(colors.text).alpha(0.68).rgb().string();var font=theme.fonts.medium;var labelMargin=icon?32:0;return React.createElement(_reactNative.View,_extends({},rest,{style:[styles.container,{backgroundColor:backgroundColor,borderRadius:roundness},style]}),React.createElement(_TouchableRipple.default,{borderless:true,delayPressIn:0,onPress:onPress,style:{borderRadius:roundness},accessibilityTraits:active?['button','selected']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{selected:active},accessibilityLabel:accessibilityLabel},React.createElement(_reactNative.View,{style:styles.wrapper},icon?React.createElement(_Icon.default,{source:icon,size:24,color:contentColor}):null,React.createElement(_Text.default,{numberOfLines:1,style:[styles.label,_objectSpread(_objectSpread({color:contentColor},font),{},{marginLeft:labelMargin})]},label))));};DrawerItem.displayName='Drawer.Item';var styles=_reactNative.StyleSheet.create({container:{marginHorizontal:10,marginVertical:4},wrapper:{flexDirection:'row',alignItems:'center',padding:8},label:{marginRight:32}});var _default=(0,_theming.withTheme)(DrawerItem);exports.default=_default;","map":{"version":3,"sources":["DrawerItem.tsx"],"names":["DrawerItem","accessibilityLabel","rest","roundness","backgroundColor","active","color","colors","contentColor","font","theme","labelMargin","icon","styles","borderRadius","selected","wrapper","marginLeft","container","marginHorizontal","marginVertical","flexDirection","alignItems","padding","label","marginRight","withTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme,\n  style,\n  onPress,\n  accessibilityLabel,\n  ...rest\n}: Props) => {\n  const { colors, roundness } = theme;\n  const backgroundColor = active\n    ? color(colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? colors.primary\n    : color(colors.text).alpha(0.68).rgb().string();\n  const font = theme.fonts.medium;\n  const labelMargin = icon ? 32 : 0;\n\n  return (\n    <View\n      {...rest}\n      style={[\n        styles.container,\n        { backgroundColor, borderRadius: roundness },\n        style,\n      ]}\n    >\n      <TouchableRipple\n        borderless\n        delayPressIn={0}\n        onPress={onPress}\n        style={{ borderRadius: roundness }}\n        accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n      >\n        <View style={styles.wrapper}>\n          {icon ? <Icon source={icon} size={24} color={contentColor} /> : null}\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.label,\n              {\n                color: contentColor,\n                ...font,\n                marginLeft: labelMargin,\n              },\n            ]}\n          >\n            {label}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"]},"metadata":{},"sourceType":"script"}