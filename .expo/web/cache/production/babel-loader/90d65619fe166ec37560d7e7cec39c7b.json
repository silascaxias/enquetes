{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=gestureHandlerRootHOC;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _hoistNonReactStatics=_interopRequireDefault(require(\"hoist-non-react-statics\"));var _GestureHandlerRootView=_interopRequireDefault(require(\"./GestureHandlerRootView\"));function gestureHandlerRootHOC(Component){var containerStyles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;function Wrapper(props){return _react.default.createElement(_GestureHandlerRootView.default,{style:[styles.container,containerStyles]},_react.default.createElement(Component,props));}Wrapper.displayName=\"gestureHandlerRootHOC(\"+(Component.displayName||Component.name)+\")\";(0,_hoistNonReactStatics.default)(Wrapper,Component);return Wrapper;}var styles=_reactNative.StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-gesture-handler/gestureHandlerRootHOC.js"],"names":["gestureHandlerRootHOC","Component","containerStyles","undefined","Wrapper","props","styles","container","displayName","name","StyleSheet","create","flex"],"mappings":"kLAAA,oDACA,yCACA,qFACA,wFAEe,QAASA,CAAAA,qBAAT,CACbC,SADa,CAGb,IADAC,CAAAA,eACA,2DADkBC,SAClB,CACA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,MACE,8BAAC,+BAAD,EAAwB,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmBL,eAAnB,CAA/B,EACE,6BAAC,SAAD,CAAeG,KAAf,CADF,CADF,CAKD,CAEDD,OAAO,CAACI,WAAR,2BAA+CP,SAAS,CAACO,WAAV,EAC7CP,SAAS,CAACQ,IADZ,MAGA,kCAAqBL,OAArB,CAA8BH,SAA9B,EAEA,MAAOG,CAAAA,OAAP,CACD,CAED,GAAME,CAAAA,MAAM,CAAGI,wBAAWC,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CAAEK,IAAI,CAAE,CAAR,CADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC(\n  Component,\n  containerStyles = undefined\n) {\n  function Wrapper(props) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${Component.displayName ||\n    Component.name})`;\n\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n"]},"metadata":{},"sourceType":"script"}