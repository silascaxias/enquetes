{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.MenuItem=exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _color=_interopRequireDefault(require(\"color\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _Icon=_interopRequireDefault(require(\"../Icon\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _theming=require(\"../../core/theming\");var _colors=require(\"../../styles/colors\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var MenuItem=function(_React$Component){(0,_inherits2.default)(MenuItem,_React$Component);var _super=_createSuper(MenuItem);function MenuItem(){(0,_classCallCheck2.default)(this,MenuItem);return _super.apply(this,arguments);}(0,_createClass2.default)(MenuItem,[{key:\"render\",value:function render(){var _this$props=this.props,icon=_this$props.icon,title=_this$props.title,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,style=_this$props.style,testID=_this$props.testID,titleStyle=_this$props.titleStyle;var disabledColor=(0,_color.default)(theme.dark?_colors.white:_colors.black).alpha(0.32).rgb().string();var titleColor=disabled?disabledColor:(0,_color.default)(theme.colors.text).alpha(0.87).rgb().string();var iconColor=disabled?disabledColor:(0,_color.default)(theme.colors.text).alpha(0.54).rgb().string();return React.createElement(_TouchableRipple.default,{style:[styles.container,style],onPress:onPress,disabled:disabled,testID:testID},React.createElement(_reactNative.View,{style:styles.row},icon?React.createElement(_reactNative.View,{style:[styles.item,styles.icon],pointerEvents:\"box-none\"},React.createElement(_Icon.default,{source:icon,size:24,color:iconColor})):null,React.createElement(_reactNative.View,{style:[styles.item,styles.content,icon?styles.widthWithIcon:null],pointerEvents:\"none\"},React.createElement(_Text.default,{numberOfLines:1,style:[styles.title,{color:titleColor},titleStyle]},title))));}}]);return MenuItem;}(React.Component);exports.MenuItem=MenuItem;_defineProperty(MenuItem,\"displayName\",'Menu.Item');var minWidth=112;var maxWidth=280;var iconWidth=40;var styles=_reactNative.StyleSheet.create({container:{paddingHorizontal:8,minWidth:minWidth,maxWidth:maxWidth,height:48,justifyContent:'center'},row:{flexDirection:'row'},icon:{width:iconWidth},title:{fontSize:16},item:{marginHorizontal:8},content:{justifyContent:'center',minWidth:minWidth-16,maxWidth:maxWidth-16},widthWithIcon:{maxWidth:maxWidth-(iconWidth+48)}});var _default=(0,_theming.withTheme)(MenuItem);exports.default=_default;","map":{"version":3,"sources":["MenuItem.tsx"],"names":["MenuItem","React","titleStyle","disabledColor","color","theme","titleColor","disabled","iconColor","styles","testID","row","icon","minWidth","maxWidth","iconWidth","container","paddingHorizontal","height","justifyContent","flexDirection","width","title","fontSize","item","marginHorizontal","content","widthWithIcon","withTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  TextStyle,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\n\ntype Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * Icon to display for the `MenuItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item icon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item icon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item icon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item icon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item icon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass MenuItem extends React.Component<Props> {\n  static displayName = 'Menu.Item';\n\n  render() {\n    const {\n      icon,\n      title,\n      disabled,\n      onPress,\n      theme,\n      style,\n      testID,\n      titleStyle,\n    } = this.props;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    const titleColor = disabled\n      ? disabledColor\n      : color(theme.colors.text).alpha(0.87).rgb().string();\n\n    const iconColor = disabled\n      ? disabledColor\n      : color(theme.colors.text).alpha(0.54).rgb().string();\n\n    return (\n      <TouchableRipple\n        style={[styles.container, style]}\n        onPress={onPress}\n        disabled={disabled}\n        testID={testID}\n      >\n        <View style={styles.row}>\n          {icon ? (\n            <View style={[styles.item, styles.icon]} pointerEvents=\"box-none\">\n              <Icon source={icon} size={24} color={iconColor} />\n            </View>\n          ) : null}\n          <View\n            style={[\n              styles.item,\n              styles.content,\n              icon ? styles.widthWithIcon : null,\n            ]}\n            pointerEvents=\"none\"\n          >\n            <Text\n              numberOfLines={1}\n              style={[styles.title, { color: titleColor }, titleStyle]}\n            >\n              {title}\n            </Text>\n          </View>\n        </View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst minWidth = 112;\nconst maxWidth = 280;\nconst iconWidth = 40;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth,\n    maxWidth,\n    height: 48,\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  icon: {\n    width: iconWidth,\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16,\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48),\n  },\n});\n\nexport default withTheme(MenuItem);\n\n// @component-docs ignore-next-line\nexport { MenuItem };\n"]},"metadata":{},"sourceType":"script"}