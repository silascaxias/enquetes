{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.AppbarContent=exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _color=_interopRequireDefault(require(\"color\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _theming=require(\"../../core/theming\");var _colors=require(\"../../styles/colors\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var AppbarContent=function(_React$Component){(0,_inherits2.default)(AppbarContent,_React$Component);var _super=_createSuper(AppbarContent);function AppbarContent(){(0,_classCallCheck2.default)(this,AppbarContent);return _super.apply(this,arguments);}(0,_createClass2.default)(AppbarContent,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$color=_this$props.color,titleColor=_this$props$color===void 0?_colors.white:_this$props$color,subtitle=_this$props.subtitle,subtitleStyle=_this$props.subtitleStyle,onPress=_this$props.onPress,style=_this$props.style,titleRef=_this$props.titleRef,titleStyle=_this$props.titleStyle,theme=_this$props.theme,title=_this$props.title,rest=_objectWithoutProperties(_this$props,[\"color\",\"subtitle\",\"subtitleStyle\",\"onPress\",\"style\",\"titleRef\",\"titleStyle\",\"theme\",\"title\"]);var fonts=theme.fonts;var subtitleColor=(0,_color.default)(titleColor).alpha(0.7).rgb().string();return React.createElement(_reactNative.TouchableWithoutFeedback,{onPress:onPress,disabled:!onPress},React.createElement(_reactNative.View,_extends({style:[styles.container,style]},rest),React.createElement(_Text.default,{ref:titleRef,style:[_objectSpread({color:titleColor},_reactNative.Platform.OS==='ios'?fonts.regular:fonts.medium),styles.title,titleStyle],numberOfLines:1,accessible:true,accessibilityTraits:\"header\",accessibilityRole:_reactNative.Platform.OS==='web'?'heading':'header'},title),subtitle?React.createElement(_Text.default,{style:[styles.subtitle,{color:subtitleColor},subtitleStyle],numberOfLines:1},subtitle):null));}}]);return AppbarContent;}(React.Component);exports.AppbarContent=AppbarContent;_defineProperty(AppbarContent,\"displayName\",'Appbar.Content');var styles=_reactNative.StyleSheet.create({container:{flex:1,paddingHorizontal:12},title:{fontSize:_reactNative.Platform.OS==='ios'?17:20},subtitle:{fontSize:_reactNative.Platform.OS==='ios'?11:14}});var _default=(0,_theming.withTheme)(AppbarContent);exports.default=_default;","map":{"version":3,"sources":["AppbarContent.tsx"],"names":["AppbarContent","React","color","titleColor","title","fonts","subtitleColor","onPress","styles","Platform","subtitle","container","flex","paddingHorizontal","fontSize","withTheme"],"mappings":"wuBAAA,oDACA,yCASA,oDAEA,gEAEA,2CACA,2C,uoFA+DA,CAAA,a,uTAGW,CACP,GAAA,CAAA,WAAA,CAWI,KAXJ,KAAA,mBAAA,WAAA,CACEE,KADF,CACSC,UADT,4BAAM,aAAN,mBAAM,QAAN,CAAA,WAAA,CAAM,QAAN,CAAM,aAAN,CAAA,WAAA,CAAM,aAAN,CAAM,OAAN,CAAA,WAAA,CAAM,OAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,QAAN,CAAA,WAAA,CAAM,QAAN,CAAM,UAAN,CAAA,WAAA,CAAM,UAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CASEC,KATF,CAAA,WAAA,CASEA,KATF,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,eAAA,CAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CADO,GAaCC,CAAAA,KAbD,CAaP,KAbO,CAaCA,KAbD,CAeP,GAAMC,CAAAA,aAAa,CAAGJ,mBAAAA,UAAAA,EAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,GAAtB,MAAsBA,EAAtB,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,qCAAA,CAAA,CAA0B,OAAO,CAAjC,OAAA,CAA4C,QAAQ,CAAE,CAACK,OAAvD,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,CAAM,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CAAA,KAAA,CAAb,CAAA,CAAA,IAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CACE,GAAG,CADL,QAAA,CAEE,KAAK,CAAE,CAAA,aAAA,CAAA,CAEHN,KAAK,CAAEC,UAFJ,CAAA,CAGCM,sBAAAA,EAAAA,GAAAA,KAAAA,CAAwBJ,KAAK,CAA7BI,OAAAA,CAAwCJ,KAAK,CAH9C,MAAA,CAAA,CAKLG,MAAM,CALD,KAAA,CAFT,UAES,CAFT,CAUE,aAAa,CAVf,CAAA,CAWE,UAAU,CAXZ,IAAA,CAYE,mBAAmB,CAZrB,QAAA,CAcE,iBAAiB,CAAEC,sBAAAA,EAAAA,GAAAA,KAAAA,CAAAA,SAAAA,CAAoC,QAdzD,CAAA,CADF,KACE,CADF,CAmBGC,QAAQ,CACP,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CACE,KAAK,CAAE,CAACF,MAAM,CAAP,QAAA,CAAkB,CAAEN,KAAK,CAAEI,aAAT,CAAlB,CADT,aACS,CADT,CAEE,aAAa,CAAE,CAFjB,CAAA,CADO,QACP,CADO,CArBf,IAEI,CADF,CADF,CAgCD,C,2BApDyBL,KAAK,CAAjC,S,sDAAMD,a,eACiB,gB,EAsDvB,GAAMQ,CAAAA,MAAM,CAAG,wBAAA,MAAA,CAAkB,CAC/BG,SAAS,CAAE,CACTC,IAAI,CADK,CAAA,CAETC,iBAAiB,CAAE,EAFV,CADoB,CAK/BT,KAAK,CAAE,CACLU,QAAQ,CAAEL,sBAAAA,EAAAA,GAAAA,KAAAA,CAAAA,EAAAA,CAA6B,EADlC,CALwB,CAQ/BC,QAAQ,CAAE,CACRI,QAAQ,CAAEL,sBAAAA,EAAAA,GAAAA,KAAAA,CAAAA,EAAAA,CAA6B,EAD/B,CARqB,CAAlB,CAAf,C,aAaeM,uBAAf,aAAeA,C","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleRef,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            ref={titleRef}\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessible\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]},"metadata":{},"sourceType":"script"}