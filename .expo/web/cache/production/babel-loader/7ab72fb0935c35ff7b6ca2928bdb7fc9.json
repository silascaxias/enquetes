{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=createTabBarItemIOSComponent;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _lodash=_interopRequireDefault(require(\"lodash.isequal\"));var _lodash2=_interopRequireDefault(require(\"lodash.pick\"));var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"./react-native\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}var ICON_PROP_NAMES=['iconName','iconSize','iconColor'];var SELECTED_ICON_PROP_NAMES=[].concat(ICON_PROP_NAMES,['selectedIconName','selectedIconColor']);var arePropsEqual=function arePropsEqual(keys){return function(prevProps,nextProps){return(0,_lodash.default)((0,_lodash2.default)(prevProps,keys),(0,_lodash2.default)(nextProps,keys));};};var areIconPropsEqual=arePropsEqual(ICON_PROP_NAMES);var areSelectedIconPropsEqual=arePropsEqual(SELECTED_ICON_PROP_NAMES);function createTabBarItemIOSComponent(IconNamePropType,getImageSource){var _class,_temp;return _temp=_class=function(_PureComponent){(0,_inherits2.default)(TabBarItemIOS,_PureComponent);var _super=_createSuper(TabBarItemIOS);function TabBarItemIOS(){var _this;(0,_classCallCheck2.default)(this,TabBarItemIOS);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={icon:undefined,selectedIcon:undefined};return _this;}(0,_createClass2.default)(TabBarItemIOS,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateIconSource();this.updateSelectedIconSource();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(!areIconPropsEqual(prevProps,this.props)){this.updateIconSource();}if(!areSelectedIconPropsEqual(prevProps,this.props)){this.updateSelectedIconSource();}}},{key:\"updateIconSource\",value:function updateIconSource(){var _this$props,iconName,iconSize,iconColor,icon;return _regenerator.default.async(function updateIconSource$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props=this.props,iconName=_this$props.iconName,iconSize=_this$props.iconSize,iconColor=_this$props.iconColor;if(!iconName){_context.next=8;break;}_context.next=4;return _regenerator.default.awrap(getImageSource(iconName,iconSize,iconColor));case 4:icon=_context.sent;this.setState({icon:icon});_context.next=9;break;case 8:if(this.state.icon){this.setState({icon:undefined});}case 9:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"updateSelectedIconSource\",value:function updateSelectedIconSource(){var _this$props2,iconName,iconColor,iconSize,selectedIconName,selectedIconColor,selectedIcon;return _regenerator.default.async(function updateSelectedIconSource$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$props2=this.props,iconName=_this$props2.iconName,iconColor=_this$props2.iconColor,iconSize=_this$props2.iconSize,selectedIconName=_this$props2.selectedIconName,selectedIconColor=_this$props2.selectedIconColor;if(!(selectedIconName||selectedIconColor)){_context2.next=8;break;}_context2.next=4;return _regenerator.default.awrap(getImageSource(selectedIconName||iconName,iconSize,selectedIconColor||iconColor));case 4:selectedIcon=_context2.sent;this.setState({selectedIcon:selectedIcon});_context2.next=9;break;case 8:if(this.state.selectedIcon){this.setState({selectedIcon:undefined});}case 9:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"render\",value:function render(){return _react.default.createElement(_reactNative.TabBarIOS.Item,(0,_extends2.default)({},this.state,this.props));}}]);return TabBarItemIOS;}(_react.PureComponent),_class.propTypes={iconName:IconNamePropType.isRequired,selectedIconName:IconNamePropType,iconSize:_propTypes.default.number,iconColor:_propTypes.default.any,selectedIconColor:_propTypes.default.any},_class.defaultProps={iconSize:30},_temp;}","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js"],"names":["ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","state","icon","undefined","selectedIcon","updateIconSource","updateSelectedIconSource","props","iconName","iconSize","iconColor","setState","selectedIconName","selectedIconColor","PureComponent","propTypes","isRequired","PropTypes","number","any","defaultProps"],"mappings":"u4BACA,8DACA,4DACA,qDACA,6DACA,2C,mtBAEA,GAAMA,CAAAA,eAAe,CAAG,CAAC,UAAD,CAAa,UAAb,CAAyB,WAAzB,CAAxB,CACA,GAAMC,CAAAA,wBAAwB,WACzBD,eADyB,EAE5B,kBAF4B,CAG5B,mBAH4B,EAA9B,CAMA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,UAACC,SAAD,CAAYC,SAAZ,QAC5B,oBAAQ,qBAAKD,SAAL,CAAgBD,IAAhB,CAAR,CAA+B,qBAAKE,SAAL,CAAgBF,IAAhB,CAA/B,CAD4B,EAAJ,EAA1B,CAGA,GAAMG,CAAAA,iBAAiB,CAAGJ,aAAa,CAACF,eAAD,CAAvC,CACA,GAAMO,CAAAA,yBAAyB,CAAGL,aAAa,CAACD,wBAAD,CAA/C,CAEe,QAASO,CAAAA,4BAAT,CACbC,gBADa,CAEbC,cAFa,CAGb,kBACA,+XAaEC,KAbF,CAaU,CACNC,IAAI,CAAEC,SADA,CAENC,YAAY,CAAED,SAFR,CAbV,mHAkBsB,CAClB,KAAKE,gBAAL,GACA,KAAKC,wBAAL,GACD,CArBH,8DAuBqBZ,SAvBrB,CAuBgC,CAC5B,GAAI,CAACE,iBAAiB,CAACF,SAAD,CAAY,KAAKa,KAAjB,CAAtB,CAA+C,CAC7C,KAAKF,gBAAL,GACD,CACD,GAAI,CAACR,yBAAyB,CAACH,SAAD,CAAY,KAAKa,KAAjB,CAA9B,CAAuD,CACrD,KAAKD,wBAAL,GACD,CACF,CA9BH,oPAiC8C,KAAKC,KAjCnD,CAiCYC,QAjCZ,aAiCYA,QAjCZ,CAiCsBC,QAjCtB,aAiCsBA,QAjCtB,CAiCgCC,SAjChC,aAiCgCA,SAjChC,KAkCQF,QAlCR,2EAmCyBR,cAAc,CAACQ,QAAD,CAAWC,QAAX,CAAqBC,SAArB,CAnCvC,SAmCYR,IAnCZ,eAoCM,KAAKS,QAAL,CAAc,CAAET,IAAI,CAAJA,IAAF,CAAd,EApCN,6BAsCW,GAAI,KAAKD,KAAL,CAAWC,IAAf,CAAqB,CAC1B,KAAKS,QAAL,CAAc,CAAET,IAAI,CAAEC,SAAR,CAAd,EACD,CAxCL,iYAkDQ,KAAKI,KAlDb,CA6CMC,QA7CN,cA6CMA,QA7CN,CA8CME,SA9CN,cA8CMA,SA9CN,CA+CMD,QA/CN,cA+CMA,QA/CN,CAgDMG,gBAhDN,cAgDMA,gBAhDN,CAiDMC,iBAjDN,cAiDMA,iBAjDN,MAmDQD,gBAAgB,EAAIC,iBAnD5B,8EAoDiCb,cAAc,CACvCY,gBAAgB,EAAIJ,QADmB,CAEvCC,QAFuC,CAGvCI,iBAAiB,EAAIH,SAHkB,CApD/C,SAoDYN,YApDZ,gBAyDM,KAAKO,QAAL,CAAc,CAAEP,YAAY,CAAZA,YAAF,CAAd,EAzDN,8BA2DW,GAAI,KAAKH,KAAL,CAAWG,YAAf,CAA6B,CAClC,KAAKO,QAAL,CAAc,CAAEP,YAAY,CAAED,SAAhB,CAAd,EACD,CA7DL,6GAgEW,CACP,MAAO,8BAAC,sBAAD,CAAW,IAAX,0BAAoB,KAAKF,KAAzB,CAAoC,KAAKM,KAAzC,EAAP,CACD,CAlEH,2BAAmCO,oBAAnC,SACSC,SADT,CACqB,CACjBP,QAAQ,CAAET,gBAAgB,CAACiB,UADV,CAEjBJ,gBAAgB,CAAEb,gBAFD,CAGjBU,QAAQ,CAAEQ,mBAAUC,MAHH,CAIjBR,SAAS,CAAEO,mBAAUE,GAJJ,CAKjBN,iBAAiB,CAAEI,mBAAUE,GALZ,CADrB,QASSC,YATT,CASwB,CACpBX,QAAQ,CAAE,EADU,CATxB,OAoED","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash.isequal';\nimport pick from 'lodash.pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      selectedIconColor: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}