{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _theming=require(\"../../core/theming\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var defaultSize=64;var AvatarImage=function(_React$Component){(0,_inherits2.default)(AvatarImage,_React$Component);var _super=_createSuper(AvatarImage);function AvatarImage(){(0,_classCallCheck2.default)(this,AvatarImage);return _super.apply(this,arguments);}(0,_createClass2.default)(AvatarImage,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$size=_this$props.size,size=_this$props$size===void 0?defaultSize:_this$props$size,source=_this$props.source,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"size\",\"source\",\"style\",\"theme\"]);var colors=theme.colors;var _ref=_reactNative.StyleSheet.flatten(style)||{},_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?colors.primary:_ref$backgroundColor;return React.createElement(_reactNative.View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},style]},rest),typeof source==='function'&&source({size:size}),typeof source!=='function'&&React.createElement(_reactNative.Image,{source:source,style:{width:size,height:size,borderRadius:size/2}}));}}]);return AvatarImage;}(React.Component);_defineProperty(AvatarImage,\"displayName\",'Avatar.Image');_defineProperty(AvatarImage,\"defaultProps\",{size:defaultSize});var _default=(0,_theming.withTheme)(AvatarImage);exports.default=_default;","map":{"version":3,"sources":["AvatarImage.tsx"],"names":["defaultSize","AvatarImage","React","size","theme","colors","backgroundColor","primary","StyleSheet","width","height","borderRadius","source","withTheme"],"mappings":"ktBAAA,oDACA,yCAQA,2C,w2DAEA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,C,GA4CA,CAAA,W,6SAOW,CACP,GAAA,CAAA,WAAA,CAA8D,KAA9D,KAAA,kBAAA,WAAA,CAAQG,IAAR,CAAQA,IAAR,2BAAM,WAAN,kBAAM,MAAN,CAAA,WAAA,CAAM,MAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAA2CC,KAA3C,CAAA,WAAA,CAA2CA,KAA3C,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CADO,GAECC,CAAAA,MAFD,CAEP,KAFO,CAECA,MAFD,UAKLG,wBAAAA,OAAAA,CAAAA,KAAAA,GADF,EAJO,2BAICF,eAJD,CAICA,eAJD,+BAImBD,MAAM,CAACE,OAJ1B,sBAOP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACL,CACEE,KAAK,CADP,IAAA,CAEEC,MAAM,CAFR,IAAA,CAGEC,YAAY,CAAER,IAAI,CAHpB,CAAA,CAIEG,eAAAA,CAAAA,eAJF,CADK,CAAA,KAAA,CADT,CAAA,CAAA,IAAA,CAAA,CAYG,MAAA,CAAA,MAAA,GAAA,UAAA,EAAgCM,MAAM,CAAC,CAAET,IAAAA,CAAAA,IAAF,CAAD,CAZzC,CAaG,MAAA,CAAA,MAAA,GAAA,UAAA,EACC,KAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,CACE,MAAM,CADR,MAAA,CAEE,KAAK,CAAE,CAAEM,KAAK,CAAP,IAAA,CAAeC,MAAM,CAArB,IAAA,CAA6BC,YAAY,CAAER,IAAI,CAAG,CAAlD,CAFT,CAAA,CAdJ,CADF,CAsBD,C,yBApCuBD,KAAK,CAA/B,S,kBAAMD,W,eACiB,c,kBADjBA,W,gBAGkB,CACpBE,IAAI,CAAEH,WADc,C,eAoCTa,uBAAf,WAAeA,C","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\nconst defaultSize = 64;\n\nexport type AvatarImageSource =\n  | ImageSourcePropType\n  | ((props: { size: number }) => React.ReactNode);\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Image to display for the `Avatar`.\n   * It accepts a standard React Native Image `source` prop\n   * Or a function that returns an `Image`.\n   */\n  source: AvatarImageSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * export default MyComponent\n * ```\n */\nclass AvatarImage extends React.Component<Props> {\n  static displayName = 'Avatar.Image';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const { size = defaultSize, source, style, theme, ...rest } = this.props;\n    const { colors } = theme;\n\n    const { backgroundColor = colors.primary } =\n      StyleSheet.flatten(style) || {};\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          style,\n        ]}\n        {...rest}\n      >\n        {typeof source === 'function' && source({ size })}\n        {typeof source !== 'function' && (\n          <Image\n            source={source}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(AvatarImage);\n"]},"metadata":{},"sourceType":"script"}