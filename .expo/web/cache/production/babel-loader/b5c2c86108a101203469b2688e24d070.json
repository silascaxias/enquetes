{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _hammerjs=_interopRequireDefault(require(\"@egjs/hammerjs\"));var _reactNative=require(\"react-native\");var _State=_interopRequireDefault(require(\"../State\"));var _constants=require(\"./constants\");var NodeManager=_interopRequireWildcard(require(\"./NodeManager\"));function _createForOfIteratorHelperLoose(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}it=o[Symbol.iterator]();return it.next.bind(it);}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}var _gestureInstances=0;var GestureHandler=function(){(0,_createClass2.default)(GestureHandler,[{key:\"id\",get:function get(){return\"\"+this.name+this._gestureInstance;}},{key:\"isDiscrete\",get:function get(){return false;}},{key:\"shouldEnableGestureOnSetup\",get:function get(){throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');}}]);function GestureHandler(){var _this=this;(0,_classCallCheck2.default)(this,GestureHandler);this.isGestureRunning=false;this.hasGestureFailed=false;this.view=null;this.config={};this.hammer=null;this.pendingGestures={};this.oldState=_State.default.UNDETERMINED;this.previousState=_State.default.UNDETERMINED;this.lastSentState=null;this.clearSelfAsPending=function(){if(Array.isArray(_this.config.waitFor)){for(var _iterator=_createForOfIteratorHelperLoose(_this.config.waitFor),_step;!(_step=_iterator()).done;){var gesture=_step.value;gesture.removePendingGesture(_this.id);}}};this.destroy=function(){_this.clearSelfAsPending();if(_this.hammer){_this.hammer.stop();_this.hammer.destroy();}_this.hammer=null;};this.isPointInView=function(_ref){var x=_ref.x,y=_ref.y;var rect=_this.view.getBoundingClientRect();var pointerInside=x>=rect.left&&x<=rect.right&&y>=rect.top&&y<=rect.bottom;return pointerInside;};this.sendEvent=function(nativeEvent){var _this$ref$props=_this.ref.props,onHandlerStateChange=_this$ref$props.onGestureHandlerStateChange,onGestureEvent=_this$ref$props.onGestureHandlerEvent;var event=_this.transformEventData(nativeEvent);invokeNullableMethod('onGestureEvent',onGestureEvent,event);if(_this.lastSentState!==event.nativeEvent.state){_this.lastSentState=event.nativeEvent.state;invokeNullableMethod('onHandlerStateChange',onHandlerStateChange,event);}};this.sync=function(){var gesture=_this.hammer.get(_this.name);if(!gesture)return;var enable=function enable(recognizer,inputData){if(!_this.config.enabled){_this.isGestureRunning=false;_this.hasGestureFailed=false;return false;}if(!inputData||!recognizer.options||typeof inputData.maxPointers==='undefined'){return _this.shouldEnableGestureOnSetup;}if(_this.hasGestureFailed){return false;}if(!_this.isDiscrete){if(_this.isGestureRunning){return true;}_this._stillWaiting=_this._getPendingGestures();if(_this._stillWaiting.length){for(var _iterator2=_createForOfIteratorHelperLoose(_this._stillWaiting),_step2;!(_step2=_iterator2()).done;){var _gesture=_step2.value;if(!_gesture.isDiscrete&&_gesture.isGestureRunning){_this.hasGestureFailed=true;_this.isGestureRunning=false;return false;}}return false;}}if(!_this._hasCustomActivationCriteria){return true;}var deltaRotation=_this.initialRotation==null?0:inputData.rotation-_this.initialRotation;var _this$isGestureEnable=_this.isGestureEnabledForEvent(_this.getConfig(),recognizer,(0,_extends2.default)({},inputData,{deltaRotation:deltaRotation})),success=_this$isGestureEnable.success,failed=_this$isGestureEnable.failed;if(failed){_this.simulateCancelEvent(inputData);_this.hasGestureFailed=true;}return success;};var params=_this.getHammerConfig();gesture.set((0,_extends2.default)({},params,{enable:enable}));};this._gestureInstance=_gestureInstances++;}(0,_createClass2.default)(GestureHandler,[{key:\"getConfig\",value:function getConfig(){return this.config;}},{key:\"onWaitingEnded\",value:function onWaitingEnded(gesture){}},{key:\"removePendingGesture\",value:function removePendingGesture(id){delete this.pendingGestures[id];}},{key:\"addPendingGesture\",value:function addPendingGesture(gesture){this.pendingGestures[gesture.id]=gesture;}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(){return{success:true};}},{key:\"parseNativeEvent\",value:function parseNativeEvent(nativeEvent){return nativeEvent;}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(config){return true;}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref2){var _ref2$enabled=_ref2.enabled,enabled=_ref2$enabled===void 0?true:_ref2$enabled,props=(0,_objectWithoutProperties2.default)(_ref2,[\"enabled\"]);this.clearSelfAsPending();this.config=ensureConfig((0,_extends2.default)({enabled:enabled},props));this._hasCustomActivationCriteria=this.updateHasCustomActivationCriteria(this.config);if(Array.isArray(this.config.waitFor)){for(var _iterator3=_createForOfIteratorHelperLoose(this.config.waitFor),_step3;!(_step3=_iterator3()).done;){var gesture=_step3.value;gesture.addPendingGesture(this);}}if(this.hammer){this.sync();}return this.config;}},{key:\"getState\",value:function getState(type){return _constants.EventMap[type];}},{key:\"transformEventData\",value:function transformEventData(event){var eventType=event.eventType,numberOfPointers=event.maxPointers;var changedTouch=event.changedPointers[0];var pointerInside=this.isPointInView({x:changedTouch.clientX,y:changedTouch.clientY});var state=this.getState(eventType);if(state!==this.previousState){this.oldState=this.previousState;this.previousState=state;}return{nativeEvent:(0,_extends2.default)({numberOfPointers:numberOfPointers,state:state,pointerInside:pointerInside},this.transformNativeEvent(event),{handlerTag:this.handlerTag,target:this.ref,oldState:this.oldState}),timeStamp:Date.now()};}},{key:\"transformNativeEvent\",value:function transformNativeEvent(event){return{};}},{key:\"cancelPendingGestures\",value:function cancelPendingGestures(event){for(var _i=0,_Object$values=Object.values(this.pendingGestures);_i<_Object$values.length;_i++){var gesture=_Object$values[_i];if(gesture&&gesture.isGestureRunning){gesture.hasGestureFailed=true;gesture.cancelEvent(event);}}}},{key:\"notifyPendingGestures\",value:function notifyPendingGestures(){for(var _i2=0,_Object$values2=Object.values(this.pendingGestures);_i2<_Object$values2.length;_i2++){var gesture=_Object$values2[_i2];if(gesture){gesture.onWaitingEnded(this);}}}},{key:\"onGestureEnded\",value:function onGestureEnded(event){this.isGestureRunning=false;this.cancelPendingGestures(event);}},{key:\"forceInvalidate\",value:function forceInvalidate(event){if(this.isGestureRunning){this.hasGestureFailed=true;this.cancelEvent(event);}}},{key:\"cancelEvent\",value:function cancelEvent(event){this.notifyPendingGestures();this.sendEvent((0,_extends2.default)({},event,{eventType:_hammerjs.default.INPUT_CANCEL,isFinal:true}));this.onGestureEnded(event);}},{key:\"onRawEvent\",value:function onRawEvent(_ref3){var isFirst=_ref3.isFirst;if(isFirst){this.hasGestureFailed=false;}}},{key:\"setView\",value:function setView(ref){var _this2=this;if(ref==null){this.destroy();this.view=null;return;}this.ref=ref;this.view=(0,_reactNative.findNodeHandle)(ref);this.hammer=new _hammerjs.default.Manager(this.view);this.oldState=_State.default.UNDETERMINED;this.previousState=_State.default.UNDETERMINED;this.lastSentState=null;var NativeGestureClass=this.NativeGestureClass;var gesture=new NativeGestureClass(this.getHammerConfig());this.hammer.add(gesture);this.hammer.on('hammer.input',function(ev){if(!_this2.config.enabled){_this2.hasGestureFailed=false;_this2.isGestureRunning=false;return;}_this2.onRawEvent(ev);if(_this2.initialRotation===null&&ev.rotation!==0){_this2.initialRotation=ev.rotation;}if(ev.isFinal){setTimeout(function(){_this2.initialRotation=null;_this2.hasGestureFailed=false;});}});this.setupEvents();this.sync();}},{key:\"setupEvents\",value:function setupEvents(){var _this3=this;if(!this.isDiscrete){this.hammer.on(this.name+\"start\",function(event){return _this3.onStart(event);});this.hammer.on(this.name+\"end \"+this.name+\"cancel\",function(event){return _this3.onGestureEnded(event);});}this.hammer.on(this.name,function(ev){return _this3.onGestureActivated(ev);});}},{key:\"onStart\",value:function onStart(_ref4){var deltaX=_ref4.deltaX,deltaY=_ref4.deltaY,rotation=_ref4.rotation;this.oldState=_State.default.UNDETERMINED;this.previousState=_State.default.UNDETERMINED;this.lastSentState=null;this.isGestureRunning=true;this.__initialX=deltaX;this.__initialY=deltaY;this.initialRotation=rotation;}},{key:\"onGestureActivated\",value:function onGestureActivated(ev){this.sendEvent(ev);}},{key:\"onSuccess\",value:function onSuccess(){}},{key:\"_getPendingGestures\",value:function _getPendingGestures(){if(Array.isArray(this.config.waitFor)&&this.config.waitFor.length){var stillWaiting=this.config.waitFor.filter(function(_ref5){var hasGestureFailed=_ref5.hasGestureFailed;return hasGestureFailed===false;});return stillWaiting;}return[];}},{key:\"getHammerConfig\",value:function getHammerConfig(){var pointers=this.config.minPointers===this.config.maxPointers?this.config.minPointers:0;return{pointers:pointers};}},{key:\"simulateCancelEvent\",value:function simulateCancelEvent(inputData){}},{key:\"NativeGestureClass\",get:function get(){throw new Error('Must override GestureHandler.NativeGestureClass');}}]);return GestureHandler;}();function invokeNullableMethod(name,method,event){if(method){if(typeof method==='function'){method(event);}else{if('__getHandler'in method&&typeof method.__getHandler==='function'){var handler=method.__getHandler();invokeNullableMethod(name,handler,event);}else{if('__nodeConfig'in method){var argMapping=method.__nodeConfig.argMapping;if(Array.isArray(argMapping)){for(var index in argMapping){var _argMapping$index=(0,_slicedToArray2.default)(argMapping[index],2),key=_argMapping$index[0],value=_argMapping$index[1];if(key in event.nativeEvent){var nativeValue=event.nativeEvent[key];if(value&&value.setValue){value.setValue(nativeValue);}else{method.__nodeConfig.argMapping[index]=[key,nativeValue];}}}}}}}}}function ensureConfig(config){var props=(0,_extends2.default)({},config);if('minDist'in config){props.minDist=config.minDist;props.minDistSq=props.minDist*props.minDist;}if('minVelocity'in config){props.minVelocity=config.minVelocity;props.minVelocitySq=props.minVelocity*props.minVelocity;}if('maxDist'in config){props.maxDist=config.maxDist;props.maxDistSq=config.maxDist*config.maxDist;}if('waitFor'in config){props.waitFor=asArray(config.waitFor).map(function(_ref6){var _handlerTag=_ref6._handlerTag;return NodeManager.getHandler(_handlerTag);}).filter(function(v){return v;});}else{props.waitFor=null;}['minPointers','maxPointers','minDist','maxDist','maxDistSq','minVelocitySq','minDistSq','minVelocity','failOffsetXStart','failOffsetYStart','failOffsetXEnd','failOffsetYEnd','activeOffsetXStart','activeOffsetXEnd','activeOffsetYStart','activeOffsetYEnd'].forEach(function(prop){if(typeof props[prop]==='undefined'){props[prop]=Number.NaN;}});return props;}function asArray(value){return value==null?[]:Array.isArray(value)?value:[value];}var _default=GestureHandler;exports.default=_default;","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-gesture-handler/web/GestureHandler.js"],"names":["_gestureInstances","GestureHandler","name","_gestureInstance","Error","isGestureRunning","hasGestureFailed","view","config","hammer","pendingGestures","oldState","State","UNDETERMINED","previousState","lastSentState","clearSelfAsPending","Array","isArray","waitFor","gesture","removePendingGesture","id","destroy","stop","isPointInView","x","y","rect","getBoundingClientRect","pointerInside","left","right","top","bottom","sendEvent","nativeEvent","ref","props","onHandlerStateChange","onGestureHandlerStateChange","onGestureEvent","onGestureHandlerEvent","event","transformEventData","invokeNullableMethod","state","sync","get","enable","recognizer","inputData","enabled","options","maxPointers","shouldEnableGestureOnSetup","isDiscrete","_stillWaiting","_getPendingGestures","length","_hasCustomActivationCriteria","deltaRotation","initialRotation","rotation","isGestureEnabledForEvent","getConfig","success","failed","simulateCancelEvent","params","getHammerConfig","set","ensureConfig","updateHasCustomActivationCriteria","addPendingGesture","type","EventMap","eventType","numberOfPointers","changedTouch","changedPointers","clientX","clientY","getState","transformNativeEvent","handlerTag","target","timeStamp","Date","now","Object","values","cancelEvent","onWaitingEnded","cancelPendingGestures","notifyPendingGestures","Hammer","INPUT_CANCEL","isFinal","onGestureEnded","isFirst","Manager","NativeGestureClass","add","on","ev","onRawEvent","setTimeout","setupEvents","onStart","onGestureActivated","deltaX","deltaY","__initialX","__initialY","stillWaiting","filter","pointers","minPointers","method","__getHandler","handler","argMapping","__nodeConfig","index","key","value","nativeValue","setValue","minDist","minDistSq","minVelocity","minVelocitySq","maxDist","maxDistSq","asArray","map","_handlerTag","NodeManager","getHandler","v","forEach","prop","Number","NaN"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { findNodeHandle } from 'react-native';\n\nimport State from '../State';\nimport { EventMap } from './constants';\nimport * as NodeManager from './NodeManager';\n\nlet _gestureInstances = 0;\n\nclass GestureHandler {\n  isGestureRunning = false;\n  hasGestureFailed = false;\n  view = null;\n  config = {};\n  hammer = null;\n  pendingGestures = {};\n  oldState = State.UNDETERMINED;\n  previousState = State.UNDETERMINED;\n  lastSentState = null;\n\n  get id() {\n    return `${this.name}${this._gestureInstance}`;\n  }\n\n  get isDiscrete() {\n    return false;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  constructor() {\n    this._gestureInstance = _gestureInstances++;\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  onWaitingEnded(gesture) {}\n\n  removePendingGesture(id) {\n    delete this.pendingGestures[id];\n  }\n\n  addPendingGesture(gesture) {\n    this.pendingGestures[gesture.id] = gesture;\n  }\n\n  isGestureEnabledForEvent() {\n    return { success: true };\n  }\n\n  parseNativeEvent(nativeEvent) {\n    return nativeEvent;\n  }\n\n  get NativeGestureClass() {\n    throw new Error('Must override GestureHandler.NativeGestureClass');\n  }\n\n  updateHasCustomActivationCriteria(config) {\n    return true;\n  }\n\n  clearSelfAsPending = () => {\n    if (Array.isArray(this.config.waitFor)) {\n      for (const gesture of this.config.waitFor) {\n        gesture.removePendingGesture(this.id);\n      }\n    }\n  };\n\n  updateGestureConfig({ enabled = true, ...props }) {\n    this.clearSelfAsPending();\n\n    this.config = ensureConfig({ enabled, ...props });\n    this._hasCustomActivationCriteria = this.updateHasCustomActivationCriteria(\n      this.config\n    );\n    if (Array.isArray(this.config.waitFor)) {\n      for (const gesture of this.config.waitFor) {\n        gesture.addPendingGesture(this);\n      }\n    }\n\n    if (this.hammer) {\n      this.sync();\n    }\n    return this.config;\n  }\n\n  destroy = () => {\n    this.clearSelfAsPending();\n\n    if (this.hammer) {\n      this.hammer.stop();\n      this.hammer.destroy();\n    }\n    this.hammer = null;\n  };\n\n  isPointInView = ({ x, y }) => {\n    const rect = this.view.getBoundingClientRect();\n    const pointerInside =\n      x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    return pointerInside;\n  };\n\n  getState(type) {\n    return EventMap[type];\n  }\n\n  transformEventData(event) {\n    const { eventType, maxPointers: numberOfPointers } = event;\n    // const direction = DirectionMap[ev.direction];\n    const changedTouch = event.changedPointers[0];\n    const pointerInside = this.isPointInView({\n      x: changedTouch.clientX,\n      y: changedTouch.clientY,\n    });\n\n    const state = this.getState(eventType);\n    if (state !== this.previousState) {\n      this.oldState = this.previousState;\n      this.previousState = state;\n    }\n\n    return {\n      nativeEvent: {\n        numberOfPointers,\n        state,\n        pointerInside,\n        ...this.transformNativeEvent(event),\n        // onHandlerStateChange only\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: this.oldState,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  transformNativeEvent(event) {\n    return {};\n  }\n\n  sendEvent = nativeEvent => {\n    const {\n      onGestureHandlerStateChange: onHandlerStateChange,\n      onGestureHandlerEvent: onGestureEvent,\n    } = this.ref.props;\n\n    const event = this.transformEventData(nativeEvent);\n\n    invokeNullableMethod('onGestureEvent', onGestureEvent, event);\n    if (this.lastSentState !== event.nativeEvent.state) {\n      this.lastSentState = event.nativeEvent.state;\n      invokeNullableMethod('onHandlerStateChange', onHandlerStateChange, event);\n    }\n  };\n\n  cancelPendingGestures(event) {\n    for (const gesture of Object.values(this.pendingGestures)) {\n      if (gesture && gesture.isGestureRunning) {\n        gesture.hasGestureFailed = true;\n        gesture.cancelEvent(event);\n      }\n    }\n  }\n\n  notifyPendingGestures() {\n    for (const gesture of Object.values(this.pendingGestures)) {\n      if (gesture) {\n        gesture.onWaitingEnded(this);\n      }\n    }\n  }\n\n  onGestureEnded(event) {\n    this.isGestureRunning = false;\n    this.cancelPendingGestures(event);\n  }\n\n  forceInvalidate(event) {\n    if (this.isGestureRunning) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(event);\n    }\n  }\n\n  cancelEvent(event) {\n    this.notifyPendingGestures();\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_CANCEL,\n      isFinal: true,\n    });\n    this.onGestureEnded(event);\n  }\n\n  onRawEvent({ isFirst }) {\n    if (isFirst) {\n      this.hasGestureFailed = false;\n    }\n  }\n\n  setView(ref) {\n    if (ref == null) {\n      this.destroy();\n      this.view = null;\n      return;\n    }\n\n    this.ref = ref;\n\n    this.view = findNodeHandle(ref);\n    this.hammer = new Hammer.Manager(this.view);\n\n    this.oldState = State.UNDETERMINED;\n    this.previousState = State.UNDETERMINED;\n    this.lastSentState = null;\n\n    const { NativeGestureClass } = this;\n    const gesture = new NativeGestureClass(this.getHammerConfig());\n    this.hammer.add(gesture);\n\n    this.hammer.on('hammer.input', ev => {\n      if (!this.config.enabled) {\n        this.hasGestureFailed = false;\n        this.isGestureRunning = false;\n        return;\n      }\n\n      this.onRawEvent(ev);\n\n      // TODO: Bacon: Check against something other than null\n      // The isFirst value is not called when the first rotation is calculated.\n      if (this.initialRotation === null && ev.rotation !== 0) {\n        this.initialRotation = ev.rotation;\n      }\n      if (ev.isFinal) {\n        // in favor of a willFail otherwise the last frame of the gesture will be captured.\n        setTimeout(() => {\n          this.initialRotation = null;\n          this.hasGestureFailed = false;\n        });\n      }\n    });\n\n    this.setupEvents();\n    this.sync();\n  }\n\n  setupEvents() {\n    if (!this.isDiscrete) {\n      this.hammer.on(`${this.name}start`, event => this.onStart(event));\n      this.hammer.on(`${this.name}end ${this.name}cancel`, event =>\n        this.onGestureEnded(event)\n      );\n    }\n    this.hammer.on(this.name, ev => this.onGestureActivated(ev));\n  }\n\n  onStart({ deltaX, deltaY, rotation }) {\n    // Reset the state for the next gesture\n    this.oldState = State.UNDETERMINED;\n    this.previousState = State.UNDETERMINED;\n    this.lastSentState = null;\n\n    this.isGestureRunning = true;\n    this.__initialX = deltaX;\n    this.__initialY = deltaY;\n    this.initialRotation = rotation;\n  }\n\n  onGestureActivated(ev) {\n    this.sendEvent(ev);\n  }\n\n  onSuccess() {}\n\n  _getPendingGestures() {\n    if (Array.isArray(this.config.waitFor) && this.config.waitFor.length) {\n      // Get the list of gestures that this gesture is still waiting for.\n      // Use `=== false` in case a ref that isn't a gesture handler is used.\n      const stillWaiting = this.config.waitFor.filter(\n        ({ hasGestureFailed }) => hasGestureFailed === false\n      );\n      return stillWaiting;\n    }\n    return [];\n  }\n\n  getHammerConfig() {\n    const pointers =\n      this.config.minPointers === this.config.maxPointers\n        ? this.config.minPointers\n        : 0;\n    return {\n      pointers,\n    };\n  }\n\n  sync = () => {\n    const gesture = this.hammer.get(this.name);\n    if (!gesture) return;\n\n    const enable = (recognizer, inputData) => {\n      if (!this.config.enabled) {\n        this.isGestureRunning = false;\n        this.hasGestureFailed = false;\n        return false;\n      }\n\n      // Prevent events before the system is ready.\n      if (\n        !inputData ||\n        !recognizer.options ||\n        typeof inputData.maxPointers === 'undefined'\n      ) {\n        return this.shouldEnableGestureOnSetup;\n      }\n\n      if (this.hasGestureFailed) {\n        return false;\n      }\n\n      if (!this.isDiscrete) {\n        if (this.isGestureRunning) {\n          return true;\n        }\n        // The built-in hammer.js \"waitFor\" doesn't work across multiple views.\n        // Only process if there are views to wait for.\n        this._stillWaiting = this._getPendingGestures();\n        // This gesture should continue waiting.\n        if (this._stillWaiting.length) {\n          // Check to see if one of the gestures you're waiting for has started.\n          // If it has then the gesture should fail.\n          for (const gesture of this._stillWaiting) {\n            // When the target gesture has started, this gesture must force fail.\n            if (!gesture.isDiscrete && gesture.isGestureRunning) {\n              this.hasGestureFailed = true;\n              this.isGestureRunning = false;\n              return false;\n            }\n          }\n          // This gesture shouldn't start until the others have finished.\n          return false;\n        }\n      }\n\n      // Use default behaviour\n      if (!this._hasCustomActivationCriteria) {\n        return true;\n      }\n\n      const deltaRotation =\n        this.initialRotation == null\n          ? 0\n          : inputData.rotation - this.initialRotation;\n      const { success, failed } = this.isGestureEnabledForEvent(\n        this.getConfig(),\n        recognizer,\n        {\n          ...inputData,\n          deltaRotation,\n        }\n      );\n\n      if (failed) {\n        this.simulateCancelEvent(inputData);\n        this.hasGestureFailed = true;\n      }\n      return success;\n    };\n\n    const params = this.getHammerConfig();\n    gesture.set({ ...params, enable });\n  };\n\n  simulateCancelEvent(inputData) {}\n}\n\n// Used for sending data to a callback or AnimatedEvent\nfunction invokeNullableMethod(name, method, event) {\n  if (method) {\n    if (typeof method === 'function') {\n      method(event);\n    } else {\n      // For use with reanimated's AnimatedEvent\n      if (\n        '__getHandler' in method &&\n        typeof method.__getHandler === 'function'\n      ) {\n        const handler = method.__getHandler();\n        invokeNullableMethod(name, handler, event);\n      } else {\n        if ('__nodeConfig' in method) {\n          const { argMapping } = method.__nodeConfig;\n          if (Array.isArray(argMapping)) {\n            for (const index in argMapping) {\n              const [key, value] = argMapping[index];\n              if (key in event.nativeEvent) {\n                const nativeValue = event.nativeEvent[key];\n                if (value && value.setValue) {\n                  // Reanimated API\n                  value.setValue(nativeValue);\n                } else {\n                  // RN Animated API\n                  method.__nodeConfig.argMapping[index] = [key, nativeValue];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// Validate the props\nfunction ensureConfig(config) {\n  const props = { ...config };\n\n  if ('minDist' in config) {\n    props.minDist = config.minDist;\n    props.minDistSq = props.minDist * props.minDist;\n  }\n  if ('minVelocity' in config) {\n    props.minVelocity = config.minVelocity;\n    props.minVelocitySq = props.minVelocity * props.minVelocity;\n  }\n  if ('maxDist' in config) {\n    props.maxDist = config.maxDist;\n    props.maxDistSq = config.maxDist * config.maxDist;\n  }\n  if ('waitFor' in config) {\n    props.waitFor = asArray(config.waitFor)\n      .map(({ _handlerTag }) => NodeManager.getHandler(_handlerTag))\n      .filter(v => v);\n  } else {\n    props.waitFor = null;\n  }\n\n  [\n    'minPointers',\n    'maxPointers',\n    'minDist',\n    'maxDist',\n    'maxDistSq',\n    'minVelocitySq',\n    'minDistSq',\n    'minVelocity',\n    'failOffsetXStart',\n    'failOffsetYStart',\n    'failOffsetXEnd',\n    'failOffsetYEnd',\n    'activeOffsetXStart',\n    'activeOffsetXEnd',\n    'activeOffsetYStart',\n    'activeOffsetYEnd',\n  ].forEach(prop => {\n    if (typeof props[prop] === 'undefined') {\n      props[prop] = Number.NaN;\n    }\n  });\n  return props;\n}\n\nfunction asArray(value) {\n  return value == null ? [] : Array.isArray(value) ? value : [value];\n}\n\nexport default GestureHandler;\n"]},"metadata":{},"sourceType":"script"}