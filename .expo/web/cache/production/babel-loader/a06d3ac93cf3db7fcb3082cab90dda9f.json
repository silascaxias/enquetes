{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _defineProperty3=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _color=_interopRequireDefault(require(\"color\"));var _InputLabel=_interopRequireDefault(require(\"./Label/InputLabel\"));var _TextInputAdornment=_interopRequireWildcard(require(\"./Adornment/TextInputAdornment\"));var _constants=require(\"./constants\");var _helpers=require(\"./helpers\");var _enums=require(\"./Adornment/enums\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var MINIMIZED_LABEL_Y_OFFSET=-18;var LABEL_PADDING_TOP=30;var LABEL_PADDING_TOP_DENSE=24;var MIN_HEIGHT=64;var MIN_DENSE_HEIGHT_WL=52;var MIN_DENSE_HEIGHT=40;var TextInputFlat=function(_React$Component){(0,_inherits2.default)(TextInputFlat,_React$Component);var _super=_createSuper(TextInputFlat);function TextInputFlat(){(0,_classCallCheck2.default)(this,TextInputFlat);return _super.apply(this,arguments);}(0,_createClass2.default)(TextInputFlat,[{key:\"render\",value:function render(){var _affixTopPosition,_onAffixChange,_topPosition;var _this$props=this.props,disabled=_this$props.disabled,editable=_this$props.editable,label=_this$props.label,error=_this$props.error,selectionColor=_this$props.selectionColor,underlineColor=_this$props.underlineColor,dense=_this$props.dense,style=_this$props.style,theme=_this$props.theme,render=_this$props.render,multiline=_this$props.multiline,parentState=_this$props.parentState,innerRef=_this$props.innerRef,onFocus=_this$props.onFocus,forceFocus=_this$props.forceFocus,onBlur=_this$props.onBlur,onChangeText=_this$props.onChangeText,onLayoutAnimatedText=_this$props.onLayoutAnimatedText,onLeftAffixLayoutChange=_this$props.onLeftAffixLayoutChange,onRightAffixLayoutChange=_this$props.onRightAffixLayoutChange,left=_this$props.left,right=_this$props.right,placeholderTextColor=_this$props.placeholderTextColor,rest=_objectWithoutProperties(_this$props,[\"disabled\",\"editable\",\"label\",\"error\",\"selectionColor\",\"underlineColor\",\"dense\",\"style\",\"theme\",\"render\",\"multiline\",\"parentState\",\"innerRef\",\"onFocus\",\"forceFocus\",\"onBlur\",\"onChangeText\",\"onLayoutAnimatedText\",\"onLeftAffixLayoutChange\",\"onRightAffixLayoutChange\",\"left\",\"right\",\"placeholderTextColor\"]);var colors=theme.colors,fonts=theme.fonts;var font=fonts.regular;var hasActiveOutline=parentState.focused||error;var _ref=_reactNative.StyleSheet.flatten(style)||{},fontSizeStyle=_ref.fontSize,fontWeight=_ref.fontWeight,height=_ref.height,paddingHorizontal=_ref.paddingHorizontal,viewStyle=_objectWithoutProperties(_ref,[\"fontSize\",\"fontWeight\",\"height\",\"paddingHorizontal\"]);var fontSize=fontSizeStyle||_constants.MAXIMIZED_LABEL_FONT_SIZE;var isPaddingHorizontalPassed=paddingHorizontal!==undefined&&typeof paddingHorizontal==='number';var adornmentConfig=(0,_TextInputAdornment.getAdornmentConfig)({left:left,right:right});var _calculateFlatInputHo=(0,_helpers.calculateFlatInputHorizontalPadding)({adornmentConfig:adornmentConfig}),paddingLeft=_calculateFlatInputHo.paddingLeft,paddingRight=_calculateFlatInputHo.paddingRight;if(isPaddingHorizontalPassed){paddingLeft=paddingHorizontal;paddingRight=paddingHorizontal;}var leftLayout=parentState.leftLayout,rightLayout=parentState.rightLayout;var rightAffixWidth=right?rightLayout.width||_constants.ADORNMENT_SIZE:_constants.ADORNMENT_SIZE;var leftAffixWidth=left?leftLayout.width||_constants.ADORNMENT_SIZE:_constants.ADORNMENT_SIZE;var adornmentStyleAdjustmentForNativeInput=(0,_TextInputAdornment.getAdornmentStyleAdjustmentForNativeInput)({adornmentConfig:adornmentConfig,rightAffixWidth:rightAffixWidth,leftAffixWidth:leftAffixWidth,inputOffset:_constants.FLAT_INPUT_OFFSET});var inputTextColor,activeColor,underlineColorCustom,placeholderColor,errorColor;if(disabled){inputTextColor=activeColor=(0,_color.default)(colors.text).alpha(0.54).rgb().string();placeholderColor=colors.disabled;underlineColorCustom='transparent';}else{inputTextColor=colors.text;activeColor=error?colors.error:colors.primary;placeholderColor=colors.placeholder;errorColor=colors.error;underlineColorCustom=underlineColor||colors.disabled;}var containerStyle={backgroundColor:theme.dark?(0,_color.default)(colors.background).lighten(0.24).rgb().string():(0,_color.default)(colors.background).darken(0.06).rgb().string(),borderTopLeftRadius:theme.roundness,borderTopRightRadius:theme.roundness};var labelScale=_constants.MINIMIZED_LABEL_FONT_SIZE/fontSize;var fontScale=_constants.MAXIMIZED_LABEL_FONT_SIZE/fontSize;var labelWidth=parentState.labelLayout.width;var labelHeight=parentState.labelLayout.height;var labelHalfWidth=labelWidth/2;var labelHalfHeight=labelHeight/2;var baseLabelTranslateX=(_reactNative.I18nManager.isRTL?1:-1)*(labelHalfWidth-labelScale*labelWidth/2)+(1-labelScale)*(_reactNative.I18nManager.isRTL?-1:1)*paddingLeft;var minInputHeight=dense?(label?MIN_DENSE_HEIGHT_WL:MIN_DENSE_HEIGHT)-LABEL_PADDING_TOP_DENSE:MIN_HEIGHT-LABEL_PADDING_TOP;var inputHeight=(0,_helpers.calculateInputHeight)(labelHeight,height,minInputHeight);var topPosition=(0,_helpers.calculateLabelTopPosition)(labelHeight,inputHeight,multiline&&height?0:!height?minInputHeight/2:0);if(height&&typeof height!=='number'){console.warn('Currently we support only numbers in height prop');}var paddingSettings={height:height?+height:null,labelHalfHeight:labelHalfHeight,offset:_constants.FLAT_INPUT_OFFSET,multiline:multiline?multiline:null,dense:dense?dense:null,topPosition:topPosition,fontSize:fontSize,label:label,scale:fontScale,isAndroid:_reactNative.Platform.OS==='android',styles:_reactNative.StyleSheet.flatten(dense?styles.inputFlatDense:styles.inputFlat)};var pad=(0,_helpers.calculatePadding)(paddingSettings);var paddingFlat=(0,_helpers.adjustPaddingFlat)(_objectSpread(_objectSpread({},paddingSettings),{},{pad:pad}));var baseLabelTranslateY=-labelHalfHeight-(topPosition+MINIMIZED_LABEL_Y_OFFSET);var placeholderOpacity=hasActiveOutline?(0,_helpers.interpolatePlaceholder)(parentState.labeled,hasActiveOutline):parentState.labelLayout.measured?1:0;var minHeight=height||(dense?label?MIN_DENSE_HEIGHT_WL:MIN_DENSE_HEIGHT:MIN_HEIGHT);var flatHeight=inputHeight+(!height?dense?LABEL_PADDING_TOP_DENSE:LABEL_PADDING_TOP:0);var iconTopPosition=(flatHeight-_constants.ADORNMENT_SIZE)/2;var leftAffixTopPosition=leftLayout.height?(0,_helpers.calculateFlatAffixTopPosition)(_objectSpread(_objectSpread({height:flatHeight},paddingFlat),{},{affixHeight:leftLayout.height})):null;var rightAffixTopPosition=rightLayout.height?(0,_helpers.calculateFlatAffixTopPosition)(_objectSpread(_objectSpread({height:flatHeight},paddingFlat),{},{affixHeight:rightLayout.height})):null;var labelProps={label:label,onLayoutAnimatedText:onLayoutAnimatedText,placeholderOpacity:placeholderOpacity,error:error,placeholderStyle:styles.placeholder,baseLabelTranslateY:baseLabelTranslateY,baseLabelTranslateX:baseLabelTranslateX,font:font,fontSize:fontSize,fontWeight:fontWeight,labelScale:labelScale,wiggleOffsetX:_constants.LABEL_WIGGLE_X_OFFSET,topPosition:topPosition,paddingOffset:{paddingLeft:paddingLeft,paddingRight:paddingRight},hasActiveOutline:hasActiveOutline,activeColor:activeColor,placeholderColor:placeholderColor,errorColor:errorColor};var affixTopPosition=(_affixTopPosition={},(0,_defineProperty3.default)(_affixTopPosition,_enums.AdornmentSide.Left,leftAffixTopPosition),(0,_defineProperty3.default)(_affixTopPosition,_enums.AdornmentSide.Right,rightAffixTopPosition),_affixTopPosition);var onAffixChange=(_onAffixChange={},(0,_defineProperty3.default)(_onAffixChange,_enums.AdornmentSide.Left,onLeftAffixLayoutChange),(0,_defineProperty3.default)(_onAffixChange,_enums.AdornmentSide.Right,onRightAffixLayoutChange),_onAffixChange);var adornmentProps={adornmentConfig:adornmentConfig,forceFocus:forceFocus,topPosition:(_topPosition={},(0,_defineProperty3.default)(_topPosition,_enums.AdornmentType.Affix,affixTopPosition),(0,_defineProperty3.default)(_topPosition,_enums.AdornmentType.Icon,iconTopPosition),_topPosition),onAffixChange:onAffixChange,isTextInputFocused:this.props.parentState.focused};if(adornmentConfig.length){adornmentProps=_objectSpread(_objectSpread({},adornmentProps),{},{left:left,right:right,textStyle:_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,fontWeight:fontWeight}),visible:this.props.parentState.labeled});}return React.createElement(_reactNative.View,{style:[containerStyle,viewStyle]},React.createElement(Underline,{parentState:parentState,underlineColorCustom:underlineColorCustom,error:error,colors:colors,activeColor:activeColor}),React.createElement(_reactNative.View,{style:{paddingTop:0,paddingBottom:0,minHeight:minHeight}},React.createElement(_InputLabel.default,{parentState:parentState,labelProps:labelProps}),render===null||render===void 0?void 0:render(_objectSpread(_objectSpread({},rest),{},{ref:innerRef,onChangeText:onChangeText,placeholder:label?parentState.placeholder:this.props.placeholder,placeholderTextColor:placeholderTextColor||placeholderColor,editable:!disabled&&editable,selectionColor:typeof selectionColor==='undefined'?activeColor:selectionColor,onFocus:onFocus,onBlur:onBlur,underlineColorAndroid:'transparent',multiline:multiline,style:[styles.input,{paddingLeft:paddingLeft,paddingRight:paddingRight},!multiline||multiline&&height?{height:flatHeight}:{},paddingFlat,_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,fontWeight:fontWeight,color:inputTextColor,textAlignVertical:multiline?'top':'center'}),adornmentStyleAdjustmentForNativeInput]}))),React.createElement(_TextInputAdornment.default,adornmentProps));}}]);return TextInputFlat;}(React.Component);_defineProperty(TextInputFlat,\"defaultProps\",{disabled:false,error:false,multiline:false,editable:true,render:function render(props){return React.createElement(_reactNative.TextInput,props);}});var _default=TextInputFlat;exports.default=_default;var Underline=function Underline(_ref2){var parentState=_ref2.parentState,error=_ref2.error,colors=_ref2.colors,activeColor=_ref2.activeColor,underlineColorCustom=_ref2.underlineColorCustom;var backgroundColor=parentState.focused?activeColor:underlineColorCustom;if(error)backgroundColor=colors.error;return React.createElement(_reactNative.Animated.View,{style:[styles.underline,{backgroundColor:backgroundColor,transform:[{scaleY:parentState.focused?1:0.5}]}]});};var styles=_reactNative.StyleSheet.create({placeholder:{position:'absolute',left:0},underline:{position:'absolute',left:0,right:0,bottom:0,height:2},input:{flexGrow:1,margin:0,textAlign:_reactNative.I18nManager.isRTL?'right':'left',zIndex:1},inputFlat:{paddingTop:24,paddingBottom:4},inputFlatDense:{paddingTop:22,paddingBottom:2}});","map":{"version":3,"sources":["TextInputFlat.tsx"],"names":["MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","React","disabled","error","multiline","editable","render","props","placeholderTextColor","fonts","font","hasActiveOutline","parentState","fontSize","paddingHorizontal","StyleSheet","fontSizeStyle","isPaddingHorizontalPassed","adornmentConfig","getAdornmentConfig","left","right","paddingRight","calculateFlatInputHorizontalPadding","paddingLeft","rightLayout","rightAffixWidth","leftAffixWidth","leftLayout","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","inputOffset","FLAT_INPUT_OFFSET","inputTextColor","activeColor","color","colors","placeholderColor","underlineColorCustom","errorColor","underlineColor","containerStyle","backgroundColor","theme","borderTopLeftRadius","borderTopRightRadius","roundness","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","MAXIMIZED_LABEL_FONT_SIZE","labelWidth","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","minInputHeight","dense","label","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","height","console","paddingSettings","offset","scale","isAndroid","Platform","styles","pad","calculatePadding","paddingFlat","adjustPaddingFlat","baseLabelTranslateY","placeholderOpacity","interpolatePlaceholder","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","calculateFlatAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","onLayoutAnimatedText","placeholderStyle","fontWeight","wiggleOffsetX","paddingOffset","affixTopPosition","AdornmentSide","onAffixChange","onRightAffixLayoutChange","adornmentProps","forceFocus","AdornmentType","isTextInputFocused","focused","textStyle","visible","labeled","paddingTop","paddingBottom","ref","onChangeText","placeholder","selectionColor","onFocus","onBlur","underlineColorAndroid","style","textAlignVertical","Underline","transform","scaleY","position","underline","bottom","input","flexGrow","margin","textAlign","zIndex","inputFlat","inputFlatDense"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    const isPaddingHorizontalPassed =\n      paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right,\n    });\n\n    let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n      adornmentConfig,\n    });\n\n    if (isPaddingHorizontalPassed) {\n      paddingLeft = paddingHorizontal as number;\n      paddingRight = paddingHorizontal as number;\n    }\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        inputOffset: FLAT_INPUT_OFFSET,\n      }\n    );\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background).lighten(0.24).rgb().string()\n        : color(colors.background).darken(0.06).rgb().string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: FLAT_INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n    const leftAffixTopPosition = leftLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: leftLayout.height,\n        })\n      : null;\n\n    const rightAffixTopPosition = rightLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: rightLayout.height,\n        })\n      : null;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset: { paddingLeft, paddingRight },\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n    };\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Affix]: affixTopPosition,\n        [AdornmentType.Icon]: iconTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: this.props.parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={{\n            paddingTop: 0,\n            paddingBottom: 0,\n            minHeight,\n          }}\n        >\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            // @ts-ignore\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              { paddingLeft, paddingRight },\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n              },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          })}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}