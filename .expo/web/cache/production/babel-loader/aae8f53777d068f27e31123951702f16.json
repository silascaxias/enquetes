{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _Modal=_interopRequireDefault(require(\"../Modal\"));var _DialogContent=_interopRequireDefault(require(\"./DialogContent\"));var _DialogActions=_interopRequireDefault(require(\"./DialogActions\"));var _DialogTitle=_interopRequireDefault(require(\"./DialogTitle\"));var _DialogScrollArea=_interopRequireDefault(require(\"./DialogScrollArea\"));var _theming=require(\"../../core/theming\");var _overlay=_interopRequireDefault(require(\"../../styles/overlay\"));var DIALOG_ELEVATION=24;var Dialog=function Dialog(_ref){var children=_ref.children,_ref$dismissable=_ref.dismissable,dismissable=_ref$dismissable===void 0?true:_ref$dismissable,onDismiss=_ref.onDismiss,_ref$visible=_ref.visible,visible=_ref$visible===void 0?false:_ref$visible,style=_ref.style,theme=_ref.theme;return React.createElement(_Modal.default,{dismissable:dismissable,onDismiss:onDismiss,visible:visible,contentContainerStyle:[{borderRadius:theme.roundness,backgroundColor:theme.dark&&theme.mode==='adaptive'?(0,_overlay.default)(DIALOG_ELEVATION,theme.colors.surface):theme.colors.surface},styles.container,style]},React.Children.toArray(children).filter(function(child){return child!=null&&typeof child!=='boolean';}).map(function(child,i){if(i===0&&React.isValidElement(child)&&child.type===_DialogContent.default){return React.cloneElement(child,{style:[{paddingTop:24},child.props.style]});}return child;}));};Dialog.Content=_DialogContent.default;Dialog.Actions=_DialogActions.default;Dialog.Title=_DialogTitle.default;Dialog.ScrollArea=_DialogScrollArea.default;var styles=_reactNative.StyleSheet.create({container:{marginVertical:_reactNative.Platform.OS==='android'?44:0,marginHorizontal:26,elevation:DIALOG_ELEVATION,justifyContent:'flex-start'}});var _default=(0,_theming.withTheme)(Dialog);exports.default=_default;","map":{"version":3,"sources":["Dialog.tsx"],"names":["DIALOG_ELEVATION","Dialog","dismissable","visible","theme","borderRadius","backgroundColor","overlay","surface","styles","child","i","React","style","paddingTop","container","marginVertical","Platform","marginHorizontal","elevation","justifyContent","withTheme"],"mappings":"wPAAA,oDACA,yCACA,uDACA,sEACA,sEAEA,kEACA,4EACA,2CACA,qEA0BA,GAAMA,CAAAA,gBAAwB,CAA9B,EAAA,CA6CA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,UAAC,CAAA,QAAD,MAAC,QAAD,uBAEbC,WAFa,CAEbA,WAFa,2BAAC,IAAD,kBAAC,SAAD,MAAC,SAAD,mBAIbC,OAJa,CAIbA,OAJa,uBAAC,KAAD,cAAC,KAAD,MAAC,KAAD,CAMbC,KANa,MAMbA,KANa,OAQb,CAAA,KAAA,CAAA,aAAA,CAAA,cAAA,CAAA,CACE,WAAW,CADb,WAAA,CAEE,SAAS,CAFX,SAAA,CAGE,OAAO,CAHT,OAAA,CAIE,qBAAqB,CAAE,CACrB,CACEC,YAAY,CAAED,KAAK,CADrB,SAAA,CAEEE,eAAe,CACbF,KAAK,CAALA,IAAAA,EAAcA,KAAK,CAALA,IAAAA,GAAdA,UAAAA,CACKG,qBAAO,gBAAPA,CAA0BH,KAAK,CAALA,MAAAA,CAD/BA,OACKG,CADLH,CAEIA,KAAK,CAALA,MAAAA,CAAaI,OALrB,CADqB,CAQrBC,MAAM,CARe,SAAA,CAAA,KAAA,CAJzB,CAAA,CAgBG,KAAK,CAAL,QAAA,CAAA,OAAA,CAAA,QAAA,EAAA,MAAA,CACUC,SAAAA,KAAD,QAAWA,CAAAA,KAAK,EAALA,IAAAA,EAAiB,MAAA,CAAA,KAAA,GADrC,SACS,EADT,EAAA,GAAA,CAEM,SAAA,KAAA,CAAA,CAAA,CAAc,CACjB,GACEC,CAAC,GAADA,CAAAA,EACAC,KAAK,CAALA,cAAAA,CADAD,KACAC,CADAD,EAEAD,KAAK,CAALA,IAAAA,GAHF,sBAAA,CAIE,CAEA,MAAO,CAAA,KAAK,CAAL,YAAA,CAAA,KAAA,CAA0B,CAC/BG,KAAK,CAAE,CAAC,CAAEC,UAAU,CAAE,EAAd,CAAD,CAAqBJ,KAAK,CAALA,KAAAA,CAArB,KAAA,CADwB,CAA1B,CAAP,CAGD,CAED,MAAA,CAAA,KAAA,CAtCR,CAwBK,CAhBH,CARa,EAAf,CA4CAT,MAAM,CAANA,OAAAA,CAAAA,sBAAAA,CAEAA,MAAM,CAANA,OAAAA,CAAAA,sBAAAA,CAEAA,MAAM,CAANA,KAAAA,CAAAA,oBAAAA,CAEAA,MAAM,CAANA,UAAAA,CAAAA,yBAAAA,CAEA,GAAMQ,CAAAA,MAAM,CAAG,wBAAA,MAAA,CAAkB,CAC/BM,SAAS,CAAE,CAQTC,cAAc,CAAEC,sBAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,CARP,CAAA,CASTC,gBAAgB,CATP,EAAA,CAUTC,SAAS,CAVA,gBAAA,CAWTC,cAAc,CAAE,YAXP,CADoB,CAAlB,CAAf,C,aAgBeC,uBAAf,MAAeA,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Platform, StyleProp, ViewStyle } from 'react-native';\nimport Modal from '../Modal';\nimport DialogContent from './DialogContent';\nimport DialogActions from './DialogActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DialogTitle, { DialogTitle as _DialogTitle } from './DialogTitle';\nimport DialogScrollArea from './DialogScrollArea';\nimport { withTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\n\ntype Props = {\n  /**\n   * Determines whether clicking outside the dialog dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Callback that is called when the user dismisses the dialog.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the dialog is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Dialog`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DIALOG_ELEVATION: number = 24;\n\n/**\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/dialog-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/dialog-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showDialog = () => setVisible(true);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <View>\n *       <Button onPress={showDialog}>Show Dialog</Button>\n *       <Portal>\n *         <Dialog visible={visible} onDismiss={hideDialog}>\n *           <Dialog.Title>Alert</Dialog.Title>\n *           <Dialog.Content>\n *             <Paragraph>This is simple dialog</Paragraph>\n *           </Dialog.Content>\n *           <Dialog.Actions>\n *             <Button onPress={hideDialog}>Done</Button>\n *           </Dialog.Actions>\n *         </Dialog>\n *       </Portal>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Dialog = ({\n  children,\n  dismissable = true,\n  onDismiss,\n  visible = false,\n  style,\n  theme,\n}: Props) => (\n  <Modal\n    dismissable={dismissable}\n    onDismiss={onDismiss}\n    visible={visible}\n    contentContainerStyle={[\n      {\n        borderRadius: theme.roundness,\n        backgroundColor:\n          theme.dark && theme.mode === 'adaptive'\n            ? (overlay(DIALOG_ELEVATION, theme.colors.surface) as string)\n            : theme.colors.surface,\n      },\n      styles.container,\n      style,\n    ]}\n  >\n    {React.Children.toArray(children)\n      .filter((child) => child != null && typeof child !== 'boolean')\n      .map((child, i) => {\n        if (\n          i === 0 &&\n          React.isValidElement(child) &&\n          child.type === DialogContent\n        ) {\n          // Dialog content is the first item, so we add a top padding\n          return React.cloneElement(child, {\n            style: [{ paddingTop: 24 }, child.props.style],\n          });\n        }\n\n        return child;\n      })}\n  </Modal>\n);\n\n// @component ./DialogContent.tsx\nDialog.Content = DialogContent;\n// @component ./DialogActions.tsx\nDialog.Actions = DialogActions;\n// @component ./DialogTitle.tsx\nDialog.Title = DialogTitle;\n// @component ./DialogScrollArea.tsx\nDialog.ScrollArea = DialogScrollArea;\n\nconst styles = StyleSheet.create({\n  container: {\n    /**\n     * This prevents the shadow from being clipped on Android since Android\n     * doesn't support `overflow: visible`.\n     * One downside for this fix is that it will disable clicks on the area\n     * of the shadow around the dialog, consequently, if you click around the\n     * dialog (44 pixel from the top and bottom) it won't be dismissed.\n     */\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start',\n  },\n});\n\nexport default withTheme(Dialog);\n"]},"metadata":{},"sourceType":"script"}