{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _react=_interopRequireWildcard(require(\"react\"));var _GenericTouchable=_interopRequireWildcard(require(\"./GenericTouchable\"));var _reactNative=require(\"react-native\");var _propTypes=_interopRequireDefault(require(\"prop-types\"));function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}var TouchableHighlight=function(_Component){(0,_inherits2.default)(TouchableHighlight,_Component);var _super=_createSuper(TouchableHighlight);function TouchableHighlight(props){var _this;(0,_classCallCheck2.default)(this,TouchableHighlight);_this=_super.call(this,props);_this.showUnderlay=function(){if(!_this.hasPressHandler()){return;}_this.setState({extraChildStyle:{opacity:_this.props.activeOpacity},extraUnderlayStyle:{backgroundColor:_this.props.underlayColor}});_this.props.onShowUnderlay&&_this.props.onShowUnderlay();};_this.hasPressHandler=function(){return _this.props.onPress||_this.props.onPressIn||_this.props.onPressOut||_this.props.onLongPress;};_this.hideUnderlay=function(){_this.setState({extraChildStyle:null,extraUnderlayStyle:null});_this.props.onHideUnderlay&&_this.props.onHideUnderlay();};_this.onStateChange=function(from,to){if(to===_GenericTouchable.TOUCHABLE_STATE.BEGAN){_this.showUnderlay();}else if(to===_GenericTouchable.TOUCHABLE_STATE.UNDETERMINED||to===_GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE){_this.hideUnderlay();}};_this.state={extraChildStyle:null,extraUnderlayStyle:null};return _this;}(0,_createClass2.default)(TouchableHighlight,[{key:\"renderChildren\",value:function renderChildren(){if(!this.props.children){return _react.default.createElement(_reactNative.View,null);}var child=_react.default.Children.only(this.props.children);return _react.default.cloneElement(child,{style:_reactNative.StyleSheet.compose(child.props.style,this.state.extraChildStyle)});}},{key:\"render\",value:function render(){var _this$props=this.props,_this$props$style=_this$props.style,style=_this$props$style===void 0?{}:_this$props$style,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"style\"]);var extraUnderlayStyle=this.state.extraUnderlayStyle;return _react.default.createElement(_GenericTouchable.default,(0,_extends2.default)({},rest,{style:[style,extraUnderlayStyle],onStateChange:this.onStateChange}),this.renderChildren());}}]);return TouchableHighlight;}(_react.Component);exports.default=TouchableHighlight;TouchableHighlight.defaultProps=(0,_extends2.default)({},_GenericTouchable.default.defaultProps,{activeOpacity:0.85,delayPressOut:100,underlayColor:'black'});TouchableHighlight.propTypes=(0,_extends2.default)({},_GenericTouchable.default.publicPropTypes,{activeOpacity:_propTypes.default.number,underlayColor:_propTypes.default.string,style:_propTypes.default.any,onShowUnderlay:_propTypes.default.func,onHideUnderlay:_propTypes.default.func});","map":{"version":3,"sources":["/Users/scaxias/Projetos/Estudos/Enquetes/node_modules/react-native-gesture-handler/touchables/TouchableHighlight.js"],"names":["TouchableHighlight","props","showUnderlay","hasPressHandler","setState","extraChildStyle","opacity","activeOpacity","extraUnderlayStyle","backgroundColor","underlayColor","onShowUnderlay","onPress","onPressIn","onPressOut","onLongPress","hideUnderlay","onHideUnderlay","onStateChange","from","to","TOUCHABLE_STATE","BEGAN","UNDETERMINED","MOVED_OUTSIDE","state","children","child","React","Children","only","cloneElement","style","StyleSheet","compose","rest","renderChildren","Component","defaultProps","GenericTouchable","delayPressOut","propTypes","publicPropTypes","PropTypes","number","string","any","func"],"mappings":"k5BAAA,qDACA,6EACA,yCACA,6D,stBAKqBA,CAAAA,kB,wHAiBnB,4BAAYC,KAAZ,CAAmB,iEACjB,uBAAMA,KAAN,EADiB,MASnBC,YATmB,CASJ,UAAM,CACnB,GAAI,CAAC,MAAKC,eAAL,EAAL,CAA6B,CAC3B,OACD,CACD,MAAKC,QAAL,CAAc,CACZC,eAAe,CAAE,CACfC,OAAO,CAAE,MAAKL,KAAL,CAAWM,aADL,CADL,CAIZC,kBAAkB,CAAE,CAClBC,eAAe,CAAE,MAAKR,KAAL,CAAWS,aADV,CAJR,CAAd,EAQA,MAAKT,KAAL,CAAWU,cAAX,EAA6B,MAAKV,KAAL,CAAWU,cAAX,EAA7B,CACD,CAtBkB,OAwBnBR,eAxBmB,CAwBD,iBAChB,OAAKF,KAAL,CAAWW,OAAX,EACA,MAAKX,KAAL,CAAWY,SADX,EAEA,MAAKZ,KAAL,CAAWa,UAFX,EAGA,MAAKb,KAAL,CAAWc,WAJK,EAxBC,OA8BnBC,YA9BmB,CA8BJ,UAAM,CACnB,MAAKZ,QAAL,CAAc,CACZC,eAAe,CAAE,IADL,CAEZG,kBAAkB,CAAE,IAFR,CAAd,EAIA,MAAKP,KAAL,CAAWgB,cAAX,EAA6B,MAAKhB,KAAL,CAAWgB,cAAX,EAA7B,CACD,CApCkB,OAoDnBC,aApDmB,CAoDH,SAACC,IAAD,CAAOC,EAAP,CAAc,CAC5B,GAAIA,EAAE,GAAKC,kCAAgBC,KAA3B,CAAkC,CAChC,MAAKpB,YAAL,GACD,CAFD,IAEO,IACLkB,EAAE,GAAKC,kCAAgBE,YAAvB,EACAH,EAAE,GAAKC,kCAAgBG,aAFlB,CAGL,CACA,MAAKR,YAAL,GACD,CACF,CA7DkB,CAEjB,MAAKS,KAAL,CAAa,CACXpB,eAAe,CAAE,IADN,CAEXG,kBAAkB,CAAE,IAFT,CAAb,CAFiB,aAMlB,C,mGAgCgB,CACf,GAAI,CAAC,KAAKP,KAAL,CAAWyB,QAAhB,CAA0B,CACxB,MAAO,8BAAC,iBAAD,MAAP,CACD,CAED,GAAMC,CAAAA,KAAK,CAAGC,eAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAK7B,KAAL,CAAWyB,QAA/B,CAAd,CACA,MAAOE,gBAAMG,YAAN,CAAmBJ,KAAnB,CAA0B,CAC/BK,KAAK,CAAEC,wBAAWC,OAAX,CACLP,KAAK,CAAC1B,KAAN,CAAY+B,KADP,CAEL,KAAKP,KAAL,CAAWpB,eAFN,CADwB,CAA1B,CAAP,CAMD,C,uCAaQ,iBACyB,KAAKJ,KAD9B,+BACC+B,KADD,CACCA,KADD,4BACS,EADT,mBACgBG,IADhB,iEAEC3B,CAAAA,kBAFD,CAEwB,KAAKiB,KAF7B,CAECjB,kBAFD,CAGP,MACE,8BAAC,yBAAD,0BACM2B,IADN,EAEE,KAAK,CAAE,CAACH,KAAD,CAAQxB,kBAAR,CAFT,CAGE,aAAa,CAAE,KAAKU,aAHtB,GAIG,KAAKkB,cAAL,EAJH,CADF,CAQD,C,gCA3F6CC,gB,qCAA3BrC,kB,CACZsC,Y,0BACFC,0BAAiBD,Y,EACpB/B,aAAa,CAAE,I,CACfiC,aAAa,CAAE,G,CACf9B,aAAa,CAAE,O,GALEV,kB,CAQZyC,S,0BACFF,0BAAiBG,e,EACpBnC,aAAa,CAAEoC,mBAAUC,M,CACzBlC,aAAa,CAAEiC,mBAAUE,M,CACzBb,KAAK,CAAEW,mBAAUG,G,CACjBnC,cAAc,CAAEgC,mBAAUI,I,CAC1B9B,cAAc,CAAE0B,mBAAUI,I","sourcesContent":["import React, { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport { StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    activeOpacity: PropTypes.number,\n    underlayColor: PropTypes.string,\n    style: PropTypes.any,\n    onShowUnderlay: PropTypes.func,\n    onHideUnderlay: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay && this.props.onHideUnderlay();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(\n        child.props.style,\n        this.state.extraChildStyle\n      ),\n    });\n  }\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}