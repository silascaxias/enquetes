{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _CheckboxIOS=_interopRequireDefault(require(\"./CheckboxIOS\"));var _CheckboxAndroid=_interopRequireDefault(require(\"./CheckboxAndroid\"));var _CheckboxItem=_interopRequireDefault(require(\"./CheckboxItem\"));var _theming=require(\"../../core/theming\");var Checkbox=function Checkbox(props){return _reactNative.Platform.OS==='ios'?React.createElement(_CheckboxIOS.default,props):React.createElement(_CheckboxAndroid.default,props);};Checkbox.Item=_CheckboxItem.default;Checkbox.Android=_CheckboxAndroid.default;Checkbox.IOS=_CheckboxIOS.default;var _default=(0,_theming.withTheme)(Checkbox);exports.default=_default;","map":{"version":3,"sources":["Checkbox.tsx"],"names":["Checkbox","props","Platform","withTheme"],"mappings":"wPAAA,oDACA,yCAEA,kEACA,0EAIA,oEACA,2CA4EA,GAAMA,CAAAA,QAAQ,CAAIC,QAAZD,CAAAA,QAAYC,CAAAA,KAAD,QACfC,uBAAAA,EAAAA,GAAAA,KAAAA,CACE,KAAA,CAAA,aAAA,CAAA,oBAAA,CADFA,KACE,CADFA,CAGE,KAAA,CAAA,aAAA,CAAA,wBAAA,CAJJ,KAII,CAJa,EAAjB,CAQAF,QAAQ,CAARA,IAAAA,CAAAA,qBAAAA,CAGAA,QAAQ,CAARA,OAAAA,CAAAA,wBAAAA,CAGAA,QAAQ,CAARA,GAAAA,CAAAA,oBAAAA,C,aAEeG,uBAAf,QAAeA,C","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\nimport CheckboxItem from './CheckboxItem';\nimport { withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = (props: Props) =>\n  Platform.OS === 'ios' ? (\n    <CheckboxIOS {...props} />\n  ) : (\n    <CheckboxAndroid {...props} />\n  );\n\n// @component ./CheckboxItem.tsx\nCheckbox.Item = CheckboxItem;\n\n// @component ./CheckboxAndroid.tsx\nCheckbox.Android = CheckboxAndroid;\n\n// @component ./CheckboxIOS.tsx\nCheckbox.IOS = CheckboxIOS;\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"script"}