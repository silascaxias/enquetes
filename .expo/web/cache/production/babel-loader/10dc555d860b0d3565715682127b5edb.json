{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.AppbarHeader=exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _overlay=_interopRequireDefault(require(\"../../styles/overlay\"));var _Appbar=_interopRequireWildcard(require(\"./Appbar\"));var _shadow=_interopRequireDefault(require(\"../../styles/shadow\"));var _theming=require(\"../../core/theming\");var _constants=require(\"../../constants\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var AppbarHeader=function(_React$Component){(0,_inherits2.default)(AppbarHeader,_React$Component);var _super=_createSuper(AppbarHeader);function AppbarHeader(){(0,_classCallCheck2.default)(this,AppbarHeader);return _super.apply(this,arguments);}(0,_createClass2.default)(AppbarHeader,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$statusBar=_this$props.statusBarHeight,statusBarHeight=_this$props$statusBar===void 0?_constants.APPROX_STATUSBAR_HEIGHT:_this$props$statusBar,style=_this$props.style,dark=_this$props.dark,rest=_objectWithoutProperties(_this$props,[\"statusBarHeight\",\"style\",\"dark\"]);var _rest$theme=rest.theme,isDarkTheme=_rest$theme.dark,colors=_rest$theme.colors,mode=_rest$theme.mode;var _ref=_reactNative.StyleSheet.flatten(style)||{},_ref$height=_ref.height,height=_ref$height===void 0?_Appbar.DEFAULT_APPBAR_HEIGHT:_ref$height,_ref$elevation=_ref.elevation,elevation=_ref$elevation===void 0?4:_ref$elevation,customBackground=_ref.backgroundColor,_ref$zIndex=_ref.zIndex,zIndex=_ref$zIndex===void 0?0:_ref$zIndex,restStyle=_objectWithoutProperties(_ref,[\"height\",\"elevation\",\"backgroundColor\",\"zIndex\"]);var backgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?(0,_overlay.default)(elevation,colors.surface):colors.primary;var Wrapper=typeof this.props.statusBarHeight==='number'?_reactNative.View:_reactNative.SafeAreaView;return React.createElement(Wrapper,{style:[{backgroundColor:backgroundColor,zIndex:zIndex,elevation:elevation},(0,_shadow.default)(elevation)]},React.createElement(_Appbar.default,_extends({style:[{height:height,backgroundColor:backgroundColor,marginTop:statusBarHeight},styles.appbar,restStyle],dark:dark},rest)));}}]);return AppbarHeader;}(React.Component);exports.AppbarHeader=AppbarHeader;_defineProperty(AppbarHeader,\"displayName\",'Appbar.Header');var styles=_reactNative.StyleSheet.create({appbar:{elevation:0}});var _default=(0,_theming.withTheme)(AppbarHeader);exports.default=_default;","map":{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","React","statusBarHeight","dark","mode","rest","height","elevation","backgroundColor","zIndex","StyleSheet","customBackground","isDarkTheme","overlay","colors","Wrapper","shadow","marginTop","styles","appbar","withTheme"],"mappings":"uuBAAA,oDACA,yCAOA,qEACA,yDACA,mEACA,2CACA,0C,22DAiEA,CAAA,Y,kTAGW,CACP,GAAA,CAAA,WAAA,CAMI,KANJ,KAAA,uBAAA,WAAA,CAEEE,eAFF,CAEEA,eAFF,gCAAM,kCAAN,uBAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAIEC,IAJF,CAAA,WAAA,CAIEA,IAJF,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CADO,gBAQqCE,IAAI,CAAhD,KARO,CAQD,WARC,aAQCF,IARD,CAQD,MARC,aAQD,MARC,CAQ4BC,IAR5B,aAQ4BA,IAR5B,CASP,GAAA,CAAA,IAAA,CAMeM,wBAAAA,OAAAA,CAAAA,KAAAA,GANf,EAAA,aAAA,IAAA,CACEJ,MADF,CACEA,MADF,sBAAM,6BAAN,4BAAA,IAAA,CAEEC,SAFF,CAEEA,SAFF,yBAAM,CAAN,gBAAM,gBAAN,CAAA,IAAA,CAGEC,eAHF,aAAA,IAAA,CAIEC,MAJF,CAIEA,MAJF,sBAIW,CAJX,aAAA,SAAA,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,CAAA,CAOA,GAAMD,CAAAA,eAAe,CAAGG,gBAAgB,CAAA,gBAAA,CAEpCC,WAAW,EAAIR,IAAI,GAAnBQ,UAAAA,CACAC,qBAAO,SAAPA,CAAmBC,MAAM,CADzBF,OACAC,CADAD,CAEAE,MAAM,CApBH,OAgBP,CAMA,GAAMC,CAAAA,OAAO,CACX,MAAO,MAAA,KAAA,CAAP,eAAA,GAAA,QAAA,CAAA,iBAAA,CADF,yBAAA,CAGA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACE,KAAK,CACH,CACE,CAAEP,eAAF,CAAEA,eAAF,CAAmBC,MAAnB,CAAmBA,MAAnB,CAA2BF,SAAAA,CAAAA,SAA3B,CADF,CAEES,oBAFF,SAEEA,CAFF,CAFJ,CAAA,CAQE,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CAEE,KAAK,CAAE,CAEL,CAAEV,MAAF,CAAEA,MAAF,CAAUE,eAAV,CAAUA,eAAV,CAA2BS,SAAS,CAAEf,eAAtC,CAFK,CAGLgB,MAAM,CAHD,MAAA,CAFT,SAES,CAFT,CAQE,IAAI,CAAEf,IARR,CAAA,CATJ,IASI,CAAA,CARF,CADF,CAsBD,C,0BAlDwBF,KAAK,CAAhC,S,oDAAMD,Y,eACiB,e,EAoDvB,GAAMkB,CAAAA,MAAM,CAAG,wBAAA,MAAA,CAAkB,CAC/BC,MAAM,CAAE,CACNZ,SAAS,CAAE,CADL,CADuB,CAAlB,CAAf,C,aAMea,uBAAf,YAAeA,C","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarHeader extends React.Component<Props> {\n  static displayName = 'Appbar.Header';\n\n  render() {\n    const {\n      // Don't use default props since we check it to know whether we should use SafeAreaView\n      statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n      style,\n      dark,\n      ...rest\n    } = this.props;\n    const { dark: isDarkTheme, colors, mode } = rest.theme;\n    const {\n      height = DEFAULT_APPBAR_HEIGHT,\n      elevation = 4,\n      backgroundColor: customBackground,\n      zIndex = 0,\n      ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n    const backgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n    // Let the user override the behaviour\n    const Wrapper =\n      typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n\n    return (\n      <Wrapper\n        style={\n          [\n            { backgroundColor, zIndex, elevation },\n            shadow(elevation),\n          ] as StyleProp<ViewStyle>\n        }\n      >\n        <Appbar\n          //@ts-ignore\n          style={[\n            //@ts-ignore\n            { height, backgroundColor, marginTop: statusBarHeight },\n            styles.appbar,\n            restStyle,\n          ]}\n          dark={dark}\n          {...rest}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nexport { AppbarHeader };\n"]},"metadata":{},"sourceType":"script"}